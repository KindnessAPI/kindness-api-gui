{"version":3,"sources":["webpack://LoadBall/./node_modules/core-js/library/modules/es6.symbol.js","webpack://LoadBall/./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack://LoadBall/./node_modules/three/examples/js/shaders/FXAAShader.js","webpack://LoadBall/./node_modules/three/examples/js/shaders/ConvolutionShader.js","webpack://LoadBall/./node_modules/three/examples/js/postprocessing/MaskPass.js","webpack://LoadBall/./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack://LoadBall/./node_modules/core-js/library/modules/es6.object.keys.js","webpack://LoadBall/./node_modules/core-js/library/modules/_object-pie.js","webpack://LoadBall/./node_modules/three/examples/js/controls/OrbitControls.js","webpack://LoadBall/./node_modules/core-js/library/fn/object/define-property.js","webpack://LoadBall/./node_modules/core-js/library/modules/es6.object.define-property.js","webpack://LoadBall/./node_modules/core-js/library/modules/_enum-keys.js","webpack://LoadBall/./node_modules/three/examples/js/controls/MapControls.js","webpack://LoadBall/./node_modules/three/examples/js/shaders/LuminosityHighPassShader.js","webpack://LoadBall/./node_modules/three/examples/js/postprocessing/EffectComposer.js","webpack://LoadBall/./node_modules/core-js/library/modules/_wks-define.js","webpack://LoadBall/./node_modules/core-js/library/modules/_object-gopn.js","webpack://LoadBall/./node_modules/core-js/modules/es6.array.find.js","webpack://LoadBall/./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack://LoadBall/./node_modules/core-js/library/fn/object/keys.js","webpack://LoadBall/./node_modules/core-js/library/modules/_is-array.js","webpack://LoadBall/./node_modules/core-js/library/modules/_object-gops.js","webpack://LoadBall/./node_modules/three/examples/js/shaders/CopyShader.js","webpack://LoadBall/./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack://LoadBall/./node_modules/core-js/modules/web.dom.iterable.js","webpack://LoadBall/./node_modules/core-js/library/modules/_object-gopd.js","webpack://LoadBall/./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack://LoadBall/./node_modules/three/examples/js/postprocessing/UnrealBloomPass.js","webpack://LoadBall/./node_modules/core-js/library/modules/_wks-ext.js","webpack://LoadBall/./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack://LoadBall/./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack://LoadBall/./node_modules/three/examples/js/postprocessing/RenderPass.js","webpack://LoadBall/./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack://LoadBall/./node_modules/three/examples/js/postprocessing/ShaderPass.js","webpack://LoadBall/./node_modules/core-js/library/fn/object/get-own-property-symbols.js","webpack://LoadBall/./node_modules/core-js/library/fn/object/get-own-property-descriptor.js"],"names":["global","__webpack_require__","has","DESCRIPTORS","$export","redefine","META","KEY","$fails","shared","setToStringTag","uid","wks","wksExt","wksDefine","enumKeys","isArray","anObject","isObject","toObject","toIObject","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$GOPS","$DP","$keys","gOPD","f","dP","gOPN","$Symbol","Symbol","$JSON","JSON","_stringify","stringify","PROTOTYPE","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","Object","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","get","this","value","a","it","key","D","protoDesc","wrap","tag","sym","_k","isSymbol","iterator","$defineProperty","enumerable","$defineProperties","P","keys","i","l","length","$create","undefined","$propertyIsEnumerable","E","call","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","result","push","$getOwnPropertySymbols","IS_OP","TypeError","arguments","$set","configurable","set","name","G","W","F","es6Symbols","split","j","wellKnownSymbols","store","k","S","for","keyFor","useSetter","useSimple","create","defineProperty","defineProperties","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","FAILS_ON_PRIMITIVES","replacer","$replacer","args","apply","valueOf","Math","toString","windowNames","window","getWindowNames","e","slice","module","exports","THREE","FXAAShader","uniforms","tDiffuse","resolution","Vector2","vertexShader","join","fragmentShader","ConvolutionShader","defines","KERNEL_SIZE_FLOAT","KERNEL_SIZE_INT","uImageIncrement","cKernel","buildKernel","sigma","gauss","x","exp","values","sum","halfWidth","kMaxKernelSize","kernelSize","ceil","Array","MaskPass","scene","camera","Pass","clear","needsSwap","inverse","prototype","assign","constructor","render","renderer","writeBuffer","readBuffer","writeValue","clearValue","context","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass","OrbitControls","object","domElement","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","preventDefault","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDollyPan","dx","dy","sqrt","handleTouchMoveRotate","handleTouchMoveDollyPan","handleTouchEnd","focus","button","ctrlKey","metaKey","shiftKey","addEventListener","stopPropagation","EventDispatcher","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","$Object","desc","getKeys","gOPS","pIE","getSymbols","symbols","MapControls","ROTATE_UP","ROTATE_LEFT","DOLLY_ROTATE","DOLLY_PAN","rotateStart2","rotateEnd2","rotateDelta2","rotateDeltaStartFingers","rotateDeltaEndFingers","handleTouchStartDolly","handleTouchStartPan","isRotateUp","isHorizontal","isVertical","precision","sin","vector","abs","cos","handleTouchMoveDolly","handleTouchMovePan","LuminosityHighPassShader","shaderID","luminosityThreshold","smoothWidth","defaultColor","Color","defaultOpacity","EffectComposer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getSize","_pixelRatio","getPixelRatio","_width","width","_height","height","WebGLRenderTarget","texture","renderTarget1","renderTarget2","renderToScreen","passes","CopyShader","error","ShaderPass","copyPass","clock","Clock","swapBuffers","tmp","addPass","pass","getDrawingBufferSize","setSize","insertPass","index","splice","isLastEnabledPass","passIndex","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","stencilFunc","NOTEQUAL","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","FullScreenQuad","OrthographicCamera","geometry","PlaneBufferGeometry","material","_mesh","Mesh","core","LIBRARY","charAt","hiddenKeys","concat","O","$find","forced","find","callbackfn","cof","arg","opacity","$iterators","hide","Iterators","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","NAME","explicit","Collection","proto","IE8_DOM_DEFINE","UnrealBloomPass","strength","threshold","clearColor","pars","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","round","resy","renderTargetBright","generateMipmaps","renderTargetHorizonal","renderTargetVertical","highPassShader","highPassUniforms","UniformsUtils","materialHighPassFilter","ShaderMaterial","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","bloomFactors","bloomTintColors","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","oldClearColor","oldClearAlpha","basic","MeshBasicMaterial","fsQuad","getClearColor","getClearAlpha","oldAutoClear","autoClear","setClearColor","disable","STENCIL_TEST","map","inputRenderTarget","BlurDirectionX","BlurDirectionY","enable","kernelRadius","KERNEL_RADIUS","SIGMA","colorTexture","texSize","direction","NUM_MIPS","blurTexture1","blurTexture2","blurTexture3","blurTexture4","blurTexture5","dirtTexture","bloomStrength","bloomRadius","_defineProperty","obj","define_property_default","writable","_objectSpread","source","ownKeys","keys_default","get_own_property_symbols_default","filter","get_own_property_descriptor_default","forEach","d","__webpack_exports__","RenderPass","overrideMaterial","clearAlpha","clearDepth","getHex","autoClearColor","autoClearDepth","autoClearStencil","shader","textureID"],"mappings":"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,iEACA,gDACA,SACA,iBACA,kBACA,SACA,mCACA,SACA,iFACA,0BACA,SACA,+CACA,6DACA,4EACA,yEACA,iCACA,SACA,iBACA,kBACA,SACA,gCACA,SACA,iFACA,uBACA,SACA,6CACA,6DACA,SACA,wDACA,yEACA,mEACA,SACA,6BACA,SACA,iFACA,iCACA,SACA,iCACA,SACA,gDACA,2CACA,SACA,gCACA,2CACA,aACA,+BACA,2CACA,aACA,gCACA,2CACA,aACA,qCACA,2CACA,aACA,SACA,iFACA,6BACA,SACA,oDACA,4DACA,SACA,6BACA,uCACA,aACA,gCACA,uCACA,aACA,+BACA,uCACA,aACA,iCACA,uCACA,aACA,SACA,GACA,GACA,iFACA,sDACA,iFACA,qEACA,iFACA,8BACA,SACA,oCACA,uEACA,uDACA,mEACA,SACA,iBACA,iFACA,2EACA,iFACA,8CACA,SACA,eACA,iFACA,8EACA,8DACA,gEACA,kEACA,6DACA,SACA,qCACA,SACA,GACA,GACA,iFACA,GACA,oDACA,GACA,iFACA,GACA,iFACA,4DACA,iFACA,kCACA,gCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,GACA,iFACA,yDACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,iFACA,sDACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,GACA,GACA,iFACA,GACA,8CACA,GACA,iFACA,2EACA,4BACA,kCACA,8BACA,8BACA,8BACA,8BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4CACA,gCACA,QACA,4BACA,mCACA,8BACA,gCACA,gCACA,gCACA,4BACA,8BACA,8BACA,8BACA,qCACA,SACA,iFACA,2BACA,kDACA,kEACA,SACA,iFACA,2BACA,mBACA,uBACA,uBACA,iDACA,6DACA,uDACA,wCACA,0EACA,YACA,2EACA,aACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,2BACA,2CACA,qDACA,oEACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,yBACA,8BACA,gCACA,gEACA,4EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,+DACA,wEACA,+DACA,wEACA,SACA,GACA,GACA,iFACA,2DACA,iFACA,gCACA,6DACA,QACA,6DACA,SACA,GACA,GACA,GACA,GACA,iFACA,GACA,kDACA,GACA,iFACA,qBACA,iFACA,8BACA,SACA,oFACA,gCACA,sBACA,SACA,sEACA,oFACA,qCACA,sCACA,oCACA,SACA,8BACA,4DACA,sCACA,iEACA,mBACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,oCACA,+CACA,wCACA,yCACA,sCACA,SACA,oCACA,+CACA,oEACA,mCACA,gCACA,gCACA,wCACA,yCACA,wCACA,yCACA,yCACA,SACA,oCACA,kDACA,+CACA,0CACA,2CACA,0CACA,2CACA,0CACA,SACA,oCACA,+DACA,+CACA,0CACA,2CACA,0CACA,2CACA,6CACA,SACA,oCACA,yDACA,gDACA,0DACA,oCACA,uCACA,8CACA,yEACA,6BACA,iCACA,mCACA,SACA,oCACA,iEACA,gDACA,2EACA,uCACA,+BACA,2BACA,gCACA,qCACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,iFACA,0CACA,2CACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,iEACA,yEACA,4DACA,uCACA,yBACA,qEACA,0CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,6DACA,yEACA,+EACA,+CACA,kEACA,qDACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,+EACA,sDACA,qCACA,+DACA,oDACA,0BACA,oDACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oDACA,yDACA,0EACA,2DACA,iDACA,wCACA,MACA,iFACA,uBACA,sBACA,sBACA,oCACA,kCACA,wDACA,4CACA,wCACA,oBACA,wCACA,qBACA,iBACA,wCACA,4DACA,iFACA,gBACA,4DACA,iFACA,iBACA,kCACA,qCACA,iBACA,iCACA,iCACA,kCACA,kCACA,iCACA,iCACA,YACA,oDACA,wCACA,oCACA,gBACA,oCACA,iBACA,mCACA,8GACA,8GACA,8GACA,8GACA,gBACA,wGACA,wGACA,wGACA,wGACA,iBACA,aACA,iFACA,2CACA,2CACA,4CACA,4CACA,2CACA,2CACA,+CACA,+CACA,sEACA,6CACA,oFACA,oDACA,iFACA,oBACA,kCACA,2BACA,gBACA,4BACA,iBACA,iFACA,oCACA,mCACA,+GACA,+GACA,+GACA,+GACA,gBACA,yGACA,yGACA,yGACA,yGACA,iBACA,YACA,uGACA,uGACA,aACA,iFACA,wCACA,wCACA,4CACA,8CACA,qDACA,qDACA,iFACA,4CACA,4CACA,uDACA,uDACA,iFACA,4CACA,4CACA,qEACA,qEACA,uDACA,uDACA,uDACA,uDACA,iFACA,sDACA,oDACA,gDACA,6DACA,iFACA,mCACA,mCACA,uDACA,0DACA,iFACA,2CACA,2CACA,wCACA,wCACA,yDACA,gEACA,0CACA,kEACA,iFACA,uBACA,uBACA,uBACA,wBACA,2DACA,2DACA,gDACA,gDACA,iFACA,uBACA,mDACA,mDACA,uBACA,mDACA,mDACA,kDACA,4DACA,6CACA,4DACA,iFACA,kCACA,qDACA,+CACA,6CACA,2CACA,iFACA,gCACA,gCACA,wDACA,wDACA,sDACA,sDACA,8CACA,sDACA,sDACA,iFACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,wCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,kEACA,kEACA,iDACA,kEACA,kEACA,iFACA,4CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,sEACA,sEACA,qDACA,sEACA,sEACA,iFACA,gDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,0EACA,0EACA,yDACA,0EACA,0EACA,iFACA,oDACA,uCACA,wFACA,wFACA,6EACA,6EACA,uEACA,uEACA,8EACA,8EACA,6DACA,8EACA,8EACA,iFACA,gCACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,yCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,mEACA,mEACA,iDACA,mEACA,mEACA,iFACA,6CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,uEACA,uEACA,qDACA,uEACA,uEACA,iFACA,iDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,2EACA,2EACA,yDACA,2EACA,2EACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,aACA,iFACA,4BACA,iCACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,iFACA,wCACA,wCACA,4CACA,4CACA,iFACA,4DACA,4CACA,4DACA,gDACA,iFACA,yCACA,uCACA,8DACA,6CACA,8DACA,uDACA,iFACA,gEACA,mEACA,8DACA,8DACA,8BACA,wCACA,YACA,+DACA,aACA,IACA,iFACA,SACA,GACA,gBACA,oCACA,WACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,iBACA,iBACA,YACA,aACA,cACA,WACA,WACA,WACA,gBACA,OACA,GACA,wDACA,iDACA,KACAD,KAAA,+BC1lCA,IAAAP,EAAYhI,EAAQ,QAUpBgI,EAAAS,kBAAA,CAEAC,QAAA,CAEAC,kBAAA,OACAC,gBAAA,MAIAV,SAAA,CAEAC,SAAA,CAAe5E,MAAA,MACfsF,gBAAA,CAAsBtF,MAAA,IAAAyE,EAAAK,QAAA,eACtBS,QAAA,CAAcvF,MAAA,KAId+E,aAAA,CAEA,gCAEA,oBAEA,gBAEA,sEACA,4EAEA,KAEAC,KAAA,MAEAC,eAAA,CAEA,4CAEA,8BACA,gCAEA,oBAEA,gBAEA,yBACA,yCAEA,gDAEA,2DACA,iCAEA,IAEA,sBAEA,KAGAD,KAAA,MAEAQ,YAAA,SAAAC,GAIA,SAAAC,EAAAC,EAAAF,GAEA,OAAAzB,KAAA4B,KAAAD,KAAA,EAAAF,MAIA,IAAAxE,EAAA4E,EAAAC,EAAAC,EAAAC,EAAA,GAAAC,EAAA,EAAAjC,KAAAkC,KAAA,EAAAT,GAAA,EAOA,IALAQ,EAAAD,IAAAC,EAAAD,GACAD,EAAA,IAAAE,EAAA,GAEAJ,EAAA,IAAAM,MAAAF,GACAH,EAAA,EACA7E,EAAA,EAAcA,EAAAgF,IAAgBhF,EAE9B4E,EAAA5E,GAAAyE,EAAAzE,EAAA8E,EAAAN,GACAK,GAAAD,EAAA5E,GAMA,IAAAA,EAAA,EAAcA,EAAAgF,IAAgBhF,EAAA4E,EAAA5E,IAAA6E,EAE9B,OAAAD,4BClGA,IAAApB,EAAYhI,EAAQ,QAMpBgI,EAAA2B,SAAA,SAAAC,EAAAC,GAEA7B,EAAA8B,KAAA/E,KAAAzB,MAEAA,KAAAsG,QACAtG,KAAAuG,SAEAvG,KAAAyG,OAAA,EACAzG,KAAA0G,WAAA,EAEA1G,KAAA2G,SAAA,GAIAjC,EAAA2B,SAAAO,UAAAnH,OAAAoH,OAAApH,OAAA4D,OAAAqB,EAAA8B,KAAAI,WAAA,CAEAE,YAAApC,EAAA2B,SAEAU,OAAA,SAAAC,EAAAC,EAAAC,GAEA,IAeAC,EAAAC,EAfAC,EAAAL,EAAAK,QACAC,EAAAN,EAAAM,MAIAA,EAAAC,QAAAC,MAAAC,SAAA,GACAH,EAAAC,QAAAG,MAAAD,SAAA,GAIAH,EAAAC,QAAAC,MAAAG,WAAA,GACAL,EAAAC,QAAAG,MAAAC,WAAA,GAMA3H,KAAA2G,SAEAQ,EAAA,EACAC,EAAA,IAIAD,EAAA,EACAC,EAAA,GAIAE,EAAAC,QAAAK,QAAAC,SAAA,GACAP,EAAAC,QAAAK,QAAAE,MAAAT,EAAAU,QAAAV,EAAAU,QAAAV,EAAAU,SACAT,EAAAC,QAAAK,QAAAI,QAAAX,EAAAY,OAAAd,EAAA,YACAG,EAAAC,QAAAK,QAAAM,SAAAd,GAIAJ,EAAAmB,gBAAAjB,GACAlH,KAAAyG,OAAAO,EAAAP,QACAO,EAAAD,OAAA/G,KAAAsG,MAAAtG,KAAAuG,QAEAS,EAAAmB,gBAAAlB,GACAjH,KAAAyG,OAAAO,EAAAP,QACAO,EAAAD,OAAA/G,KAAAsG,MAAAtG,KAAAuG,QAIAe,EAAAC,QAAAC,MAAAG,WAAA,GACAL,EAAAC,QAAAG,MAAAC,WAAA,GAIAL,EAAAC,QAAAK,QAAAI,QAAAX,EAAAe,MAAA,cACAd,EAAAC,QAAAK,QAAAE,MAAAT,EAAAgB,KAAAhB,EAAAgB,KAAAhB,EAAAgB,SAOA3D,EAAA4D,cAAA,WAEA5D,EAAA8B,KAAA/E,KAAAzB,MAEAA,KAAA0G,WAAA,GAIAhC,EAAA4D,cAAA1B,UAAAnH,OAAA4D,OAAAqB,EAAA8B,KAAAI,WAEAnH,OAAAoH,OAAAnC,EAAA4D,cAAA1B,UAAA,CAEAG,OAAA,SAAAC,GAEAA,EAAAM,MAAAC,QAAAK,QAAAC,SAAA,8BCpGArD,EAAAC,QAAiB/H,EAAQ,gCCCzB,IAAAkB,EAAelB,EAAQ,QACvB2B,EAAY3B,EAAQ,QAEpBA,EAAQ,OAARA,CAAuB,kBACvB,gBAAAyD,GACA,OAAA9B,EAAAT,EAAAuC,6BCNAsE,EAAAlG,EAAA,GAAca,6CCCd,IAAAsF,EAAYhI,EAAQ,QAiBpBgI,EAAA6D,cAAA,SAAAC,EAAAC,GAEAzI,KAAAwI,SAEAxI,KAAAyI,gBAAAnH,IAAAmH,IAAAC,SAGA1I,KAAA2I,SAAA,EAGA3I,KAAA4I,OAAA,IAAAlE,EAAAmE,QAGA7I,KAAA8I,YAAA,EACA9I,KAAA+I,YAAAC,IAGAhJ,KAAAiJ,QAAA,EACAjJ,KAAAkJ,QAAAF,IAIAhJ,KAAAmJ,cAAA,EACAnJ,KAAAoJ,cAAAnF,KAAAoF,GAIArJ,KAAAsJ,iBAAAN,IACAhJ,KAAAuJ,gBAAAP,IAIAhJ,KAAAwJ,eAAA,EACAxJ,KAAAyJ,cAAA,IAIAzJ,KAAA0J,YAAA,EACA1J,KAAA2J,UAAA,EAGA3J,KAAA4J,cAAA,EACA5J,KAAA6J,YAAA,EAGA7J,KAAA8J,WAAA,EACA9J,KAAA+J,SAAA,EACA/J,KAAAgK,oBAAA,EACAhK,KAAAiK,YAAA,EAIAjK,KAAAkK,YAAA,EACAlK,KAAAmK,gBAAA,EAGAnK,KAAAoK,YAAA,EAGApK,KAAAiB,KAAA,CAAcoJ,KAAA,GAAAC,GAAA,GAAAC,MAAA,GAAAC,OAAA,IAGdxK,KAAAyK,aAAA,CAAsBJ,KAAA3F,EAAAgG,MAAAL,KAAAM,OAAAjG,EAAAgG,MAAAC,OAAAJ,MAAA7F,EAAAgG,MAAAH,OAGtBvK,KAAA4K,QAAA5K,KAAA4I,OAAAiC,QACA7K,KAAA8K,UAAA9K,KAAAwI,OAAAuC,SAAAF,QACA7K,KAAAgL,MAAAhL,KAAAwI,OAAAyC,KAMAjL,KAAAkL,cAAA,WAEA,OAAAC,EAAAC,KAIApL,KAAAqL,kBAAA,WAEA,OAAAF,EAAAG,OAIAtL,KAAAuL,UAAA,WAEAC,EAAAZ,QAAAa,KAAAD,EAAA5C,QACA4C,EAAAV,UAAAW,KAAAD,EAAAhD,OAAAuC,UACAS,EAAAR,MAAAQ,EAAAhD,OAAAyC,MAIAjL,KAAA0L,MAAA,WAEAF,EAAA5C,OAAA6C,KAAAD,EAAAZ,SACAY,EAAAhD,OAAAuC,SAAAU,KAAAD,EAAAV,WACAU,EAAAhD,OAAAyC,KAAAO,EAAAR,MAEAQ,EAAAhD,OAAAmD,yBACAH,EAAAI,cAAAC,GAEAL,EAAAM,SAEAxE,EAAAyE,EAAAC,MAKAhM,KAAA8L,OAAA,WAEA,IAAAG,EAAA,IAAAvH,EAAAmE,QAGAqD,GAAA,IAAAxH,EAAAyH,YAAAC,mBAAA5D,EAAA6D,GAAA,IAAA3H,EAAAmE,QAAA,QACAyD,EAAAJ,EAAArB,QAAAlE,UAEA4F,EAAA,IAAA7H,EAAAmE,QACA2D,EAAA,IAAA9H,EAAAyH,WAEA,kBAEA,IAAApB,EAAAS,EAAAhD,OAAAuC,SAkEA,OAhEAkB,EAAAR,KAAAV,GAAA0B,IAAAjB,EAAA5C,QAGAqD,EAAAS,gBAAAR,GAGAf,EAAAwB,eAAAV,GAEAT,EAAAtB,YAAA5C,IAAAyE,EAAAC,MAEAY,EAAAC,KAIA1B,EAAAG,OAAAwB,EAAAxB,MACAH,EAAAC,KAAA0B,EAAA1B,IAGAD,EAAAG,MAAArH,KAAA8I,IAAAvB,EAAAlC,gBAAArF,KAAA+I,IAAAxB,EAAAjC,gBAAA4B,EAAAG,QAGAH,EAAAC,IAAAnH,KAAA8I,IAAAvB,EAAArC,cAAAlF,KAAA+I,IAAAxB,EAAApC,cAAA+B,EAAAC,MAEAD,EAAA8B,WAGA9B,EAAA+B,QAAAC,EAGAhC,EAAA+B,OAAAjJ,KAAA8I,IAAAvB,EAAA1C,YAAA7E,KAAA+I,IAAAxB,EAAAzC,YAAAoC,EAAA+B,SAGA1B,EAAA5C,OAAAwE,IAAAC,GAEApB,EAAAqB,iBAAAnC,GAGAc,EAAAS,gBAAAJ,GAEAvB,EAAAU,KAAAD,EAAA5C,QAAAwE,IAAAnB,GAEAT,EAAAhD,OAAA+E,OAAA/B,EAAA5C,SAEA,IAAA4C,EAAAhC,eAEAsD,EAAAxB,OAAA,EAAAE,EAAA/B,cACAqD,EAAA1B,KAAA,EAAAI,EAAA/B,cAEA4D,EAAAG,eAAA,EAAAhC,EAAA/B,iBAIAqD,EAAAzK,IAAA,OAEAgL,EAAAhL,IAAA,QAIA8K,EAAA,KAMAM,GACAlB,EAAAmB,kBAAAlC,EAAAhD,OAAAuC,UAAA4C,GACA,KAAAnB,EAAAoB,IAAApC,EAAAhD,OAAAqF,aAAAF,KAEAnC,EAAAI,cAAAC,GAEAU,EAAAd,KAAAD,EAAAhD,OAAAuC,UACAyB,EAAAf,KAAAD,EAAAhD,OAAAqF,YACAJ,GAAA,GAEA,IAzFA,GAmGAzN,KAAA8N,QAAA,WAEAtC,EAAA/C,WAAAsF,oBAAA,cAAAC,IAAA,GACAxC,EAAA/C,WAAAsF,oBAAA,YAAAE,GAAA,GACAzC,EAAA/C,WAAAsF,oBAAA,QAAAG,GAAA,GAEA1C,EAAA/C,WAAAsF,oBAAA,aAAAI,GAAA,GACA3C,EAAA/C,WAAAsF,oBAAA,WAAAK,IAAA,GACA5C,EAAA/C,WAAAsF,oBAAA,YAAAM,GAAA,GAEA3F,SAAAqF,oBAAA,YAAAO,GAAA,GACA5F,SAAAqF,oBAAA,UAAAQ,GAAA,GAEAnK,OAAA2J,oBAAA,UAAAS,GAAA,IAUA,IAAAhD,EAAAxL,KAEA6L,EAAA,CAAoB4C,KAAA,UACpBC,EAAA,CAAmBD,KAAA,SACnBE,EAAA,CAAiBF,KAAA,OAEjB1C,EAAA,CAAcC,MAAA,EAAA4C,OAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,aAAA,EAAAC,gBAAA,GAEd1H,EAAAyE,EAAAC,KAEA2B,EAAA,KAGAxC,EAAA,IAAAzG,EAAAuK,UACAnC,EAAA,IAAApI,EAAAuK,UAEA9B,EAAA,EACAE,EAAA,IAAA3I,EAAAmE,QACA4E,GAAA,EAEAyB,EAAA,IAAAxK,EAAAK,QACAoK,EAAA,IAAAzK,EAAAK,QACAqK,EAAA,IAAA1K,EAAAK,QAEAsK,EAAA,IAAA3K,EAAAK,QACAuK,EAAA,IAAA5K,EAAAK,QACAwK,EAAA,IAAA7K,EAAAK,QAEAyK,EAAA,IAAA9K,EAAAK,QACA0K,EAAA,IAAA/K,EAAAK,QACA2K,EAAA,IAAAhL,EAAAK,QAEA,SAAA8H,IAEA,SAAA5I,KAAAoF,GAAA,MAAAmC,EAAArB,gBAIA,SAAAwF,IAEA,OAAA1L,KAAA2L,IAAA,IAAApE,EAAA7B,WAIA,SAAAiD,EAAAiD,GAEA/C,EAAAxB,OAAAuE,EAIA,SAAAC,EAAAD,GAEA/C,EAAA1B,KAAAyE,EAIA,IAAAE,EAAA,WAEA,IAAAC,EAAA,IAAAtL,EAAAmE,QAEA,gBAAAoH,EAAAC,GAEAF,EAAAG,oBAAAD,EAAA,GACAF,EAAAxC,gBAAAyC,GAEA5C,EAAAD,IAAA4C,IATA,GAeAI,EAAA,WAEA,IAAAJ,EAAA,IAAAtL,EAAAmE,QAEA,gBAAAoH,EAAAC,IAEA,IAAA1E,EAAAxB,mBAEAgG,EAAAG,oBAAAD,EAAA,IAIAF,EAAAG,oBAAAD,EAAA,GACAF,EAAAK,aAAA7E,EAAAhD,OAAA6D,GAAA2D,IAIAA,EAAAxC,eAAAyC,GAEA5C,EAAAD,IAAA4C,IAnBA,GA0BAM,EAAA,WAEA,IAAArE,EAAA,IAAAvH,EAAAmE,QAEA,gBAAA0H,EAAAC,GAEA,IAAAC,EAAAjF,EAAA/C,aAAAC,SAAA8C,EAAA/C,WAAAiI,KAAAlF,EAAA/C,WAEA,GAAA+C,EAAAhD,OAAAmI,oBAAA,CAGA,IAAA5F,EAAAS,EAAAhD,OAAAuC,SACAkB,EAAAR,KAAAV,GAAA0B,IAAAjB,EAAA5C,QACA,IAAAgI,EAAA3E,EAAA7K,SAGAwP,GAAA3M,KAAA4M,IAAArF,EAAAhD,OAAAsI,IAAA,EAAA7M,KAAAoF,GAAA,KAGA0G,EAAA,EAAAQ,EAAAK,EAAAH,EAAAM,aAAAvF,EAAAhD,OAAAwI,QACAZ,EAAA,EAAAI,EAAAI,EAAAH,EAAAM,aAAAvF,EAAAhD,OAAAwI,aAEIxF,EAAAhD,OAAAyI,sBAGJlB,EAAAQ,GAAA/E,EAAAhD,OAAA0I,MAAA1F,EAAAhD,OAAA2I,MAAA3F,EAAAhD,OAAAyC,KAAAwF,EAAAW,YAAA5F,EAAAhD,OAAAwI,QACAZ,EAAAI,GAAAhF,EAAAhD,OAAA6I,IAAA7F,EAAAhD,OAAA8I,QAAA9F,EAAAhD,OAAAyC,KAAAwF,EAAAM,aAAAvF,EAAAhD,OAAAwI,UAKAO,QAAAC,KAAA,gFACAhG,EAAA1B,WAAA,IAhCA,GAwCA,SAAA2H,EAAAC,GAEAlG,EAAAhD,OAAAmI,oBAEAxD,GAAAuE,EAEGlG,EAAAhD,OAAAyI,sBAEHzF,EAAAhD,OAAAyC,KAAAhH,KAAA8I,IAAAvB,EAAAvC,QAAAhF,KAAA+I,IAAAxB,EAAAtC,QAAAsC,EAAAhD,OAAAyC,KAAAyG,IACAlG,EAAAhD,OAAAmD,yBACA8B,GAAA,IAIA8D,QAAAC,KAAA,uFACAhG,EAAA9B,YAAA,GAMA,SAAAiI,EAAAD,GAEAlG,EAAAhD,OAAAmI,oBAEAxD,GAAAuE,EAEGlG,EAAAhD,OAAAyI,sBAEHzF,EAAAhD,OAAAyC,KAAAhH,KAAA8I,IAAAvB,EAAAvC,QAAAhF,KAAA+I,IAAAxB,EAAAtC,QAAAsC,EAAAhD,OAAAyC,KAAAyG,IACAlG,EAAAhD,OAAAmD,yBACA8B,GAAA,IAIA8D,QAAAC,KAAA,uFACAhG,EAAA9B,YAAA,GAUA,SAAAkI,EAAAC,GAIA3C,EAAA7M,IAAAwP,EAAAC,QAAAD,EAAAE,SAIA,SAAAC,EAAAH,GAIArC,EAAAnN,IAAAwP,EAAAC,QAAAD,EAAAE,SAIA,SAAAE,EAAAJ,GAIAxC,EAAAhN,IAAAwP,EAAAC,QAAAD,EAAAE,SAIA,SAAAG,EAAAL,GAIA1C,EAAA9M,IAAAwP,EAAAC,QAAAD,EAAAE,SAEA3C,EAAA+C,WAAAhD,EAAAD,GAAA1B,eAAAhC,EAAA3B,aAEA,IAAA4G,EAAAjF,EAAA/C,aAAAC,SAAA8C,EAAA/C,WAAAiI,KAAAlF,EAAA/C,WAEAmE,EAAA,EAAA3I,KAAAoF,GAAA+F,EAAAxJ,EAAA6K,EAAAM,cAEAjB,EAAA,EAAA7L,KAAAoF,GAAA+F,EAAAgD,EAAA3B,EAAAM,cAEA7B,EAAAzD,KAAA0D,GAEA3D,EAAAM,SAIA,SAAAuG,EAAAR,GAIApC,EAAApN,IAAAwP,EAAAC,QAAAD,EAAAE,SAEArC,EAAAyC,WAAA1C,EAAAD,GAEAE,EAAA0C,EAAA,EAEAX,EAAA9B,KAEGD,EAAA0C,EAAA,GAEHT,EAAAhC,KAIAH,EAAA/D,KAAAgE,GAEAjE,EAAAM,SAIA,SAAAwG,EAAAT,GAIAvC,EAAAjN,IAAAwP,EAAAC,QAAAD,EAAAE,SAEAxC,EAAA4C,WAAA7C,EAAAD,GAAA7B,eAAAhC,EAAAzB,UAEAuG,EAAAf,EAAA3J,EAAA2J,EAAA6C,GAEA/C,EAAA5D,KAAA6D,GAEA9D,EAAAM,SAIA,SAAAyG,EAAAV,IAMA,SAAAW,EAAAX,GAIAA,EAAArB,OAAA,EAEAmB,EAAAhC,KAEGkC,EAAArB,OAAA,GAEHiB,EAAA9B,KAIAnE,EAAAM,SAIA,SAAA2G,EAAAZ,GAIA,IAAAa,GAAA,EAEA,OAAAb,EAAAc,SAEA,KAAAnH,EAAAvK,KAAAqJ,GACAgG,EAAA,EAAA9E,EAAAvB,aACAyI,GAAA,EACA,MAEA,KAAAlH,EAAAvK,KAAAuJ,OACA8F,EAAA,GAAA9E,EAAAvB,aACAyI,GAAA,EACA,MAEA,KAAAlH,EAAAvK,KAAAoJ,KACAiG,EAAA9E,EAAAvB,YAAA,GACAyI,GAAA,EACA,MAEA,KAAAlH,EAAAvK,KAAAsJ,MACA+F,GAAA9E,EAAAvB,YAAA,GACAyI,GAAA,EACA,MAIAA,IAGAb,EAAAe,iBAEApH,EAAAM,UAOA,SAAA+G,EAAAhB,GAIA3C,EAAA7M,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAIA,SAAAC,EAAApB,GAIA,GAAArG,EAAA9B,WAAA,CAEA,IAAAwJ,EAAArB,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAC,MACAI,EAAAtB,EAAAiB,QAAA,GAAAE,MAAAnB,EAAAiB,QAAA,GAAAE,MAEA/C,EAAAhM,KAAAmP,KAAAF,IAAAC,KAEA3D,EAAAnN,IAAA,EAAA4N,GAIA,GAAAzE,EAAA1B,UAAA,CAEA,IAAAlE,EAAA,IAAAiM,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAC,OACAX,EAAA,IAAAP,EAAAiB,QAAA,GAAAE,MAAAnB,EAAAiB,QAAA,GAAAE,OAEA3D,EAAAhN,IAAAuD,EAAAwM,IAMA,SAAAiB,EAAAxB,GAIA1C,EAAA9M,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAEA5D,EAAA+C,WAAAhD,EAAAD,GAAA1B,eAAAhC,EAAA3B,aAEA,IAAA4G,EAAAjF,EAAA/C,aAAAC,SAAA8C,EAAA/C,WAAAiI,KAAAlF,EAAA/C,WAEAmE,EAAA,EAAA3I,KAAAoF,GAAA+F,EAAAxJ,EAAA6K,EAAAM,cAEAjB,EAAA,EAAA7L,KAAAoF,GAAA+F,EAAAgD,EAAA3B,EAAAM,cAEA7B,EAAAzD,KAAA0D,GAEA3D,EAAAM,SAIA,SAAAwH,EAAAzB,GAIA,GAAArG,EAAA9B,WAAA,CAEA,IAAAwJ,EAAArB,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAC,MACAI,EAAAtB,EAAAiB,QAAA,GAAAE,MAAAnB,EAAAiB,QAAA,GAAAE,MAEA/C,EAAAhM,KAAAmP,KAAAF,IAAAC,KAEA1D,EAAApN,IAAA,EAAA4N,GAEAP,EAAArN,IAAA,EAAA4B,KAAA2L,IAAAH,EAAA2C,EAAA5C,EAAA4C,EAAA5G,EAAA7B,YAEA8H,EAAA/B,EAAA0C,GAEA5C,EAAA/D,KAAAgE,GAIA,GAAAjE,EAAA1B,UAAA,CAEA,IAAAlE,EAAA,IAAAiM,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAC,OACAX,EAAA,IAAAP,EAAAiB,QAAA,GAAAE,MAAAnB,EAAAiB,QAAA,GAAAE,OAEA1D,EAAAjN,IAAAuD,EAAAwM,GAEA7C,EAAA4C,WAAA7C,EAAAD,GAAA7B,eAAAhC,EAAAzB,UAEAuG,EAAAf,EAAA3J,EAAA2J,EAAA6C,GAEA/C,EAAA5D,KAAA6D,GAIA9D,EAAAM,SAIA,SAAAyH,EAAA1B,IAUA,SAAA5D,EAAA4D,GAEA,QAAArG,EAAA7C,QAAA,CAWA,OAPAkJ,EAAAe,iBAKApH,EAAA/C,WAAA+K,MAAAhI,EAAA/C,WAAA+K,QAAApP,OAAAoP,QAEA3B,EAAA4B,QAEA,KAAAjI,EAAAf,aAAAJ,KAEA,GAAAwH,EAAA6B,SAAA7B,EAAA8B,SAAA9B,EAAA+B,SAAA,CAEA,QAAApI,EAAA1B,UAAA,OAEAmI,EAAAJ,GAEAvK,EAAAyE,EAAA+C,QAEK,CAEL,QAAAtD,EAAA5B,aAAA,OAEAgI,EAAAC,GAEAvK,EAAAyE,EAAA6C,OAIA,MAEA,KAAApD,EAAAf,aAAAE,OAEA,QAAAa,EAAA9B,WAAA,OAEAsI,EAAAH,GAEAvK,EAAAyE,EAAA8C,MAEA,MAEA,KAAArD,EAAAf,aAAAF,MAEA,QAAAiB,EAAA1B,UAAA,OAEAmI,EAAAJ,GAEAvK,EAAAyE,EAAA+C,IAEA,MAIAxH,IAAAyE,EAAAC,OAEAtD,SAAAmL,iBAAA,YAAAvF,GAAA,GACA5F,SAAAmL,iBAAA,UAAAtF,GAAA,GAEA/C,EAAAI,cAAA8C,KAMA,SAAAJ,EAAAuD,GAEA,QAAArG,EAAA7C,QAIA,OAFAkJ,EAAAe,iBAEAtL,GAEA,KAAAyE,EAAA6C,OAEA,QAAApD,EAAA5B,aAAA,OAEAsI,EAAAL,GAEA,MAEA,KAAA9F,EAAA8C,MAEA,QAAArD,EAAA9B,WAAA,OAEA2I,EAAAR,GAEA,MAEA,KAAA9F,EAAA+C,IAEA,QAAAtD,EAAA1B,UAAA,OAEAwI,EAAAT,GAEA,OAMA,SAAAtD,EAAAsD,IAEA,IAAArG,EAAA7C,UAEA4J,EAAAV,GAEAnJ,SAAAqF,oBAAA,YAAAO,GAAA,GACA5F,SAAAqF,oBAAA,UAAAQ,GAAA,GAEA/C,EAAAI,cAAA+C,GAEArH,EAAAyE,EAAAC,MAIA,SAAAkC,EAAA2D,IAEA,IAAArG,EAAA7C,UAAA,IAAA6C,EAAA9B,YAAApC,IAAAyE,EAAAC,MAAA1E,IAAAyE,EAAA6C,SAEAiD,EAAAe,iBACAf,EAAAiC,kBAEAtI,EAAAI,cAAA8C,GAEA8D,EAAAX,GAEArG,EAAAI,cAAA+C,IAIA,SAAAH,EAAAqD,IAEA,IAAArG,EAAA7C,UAAA,IAAA6C,EAAApB,aAAA,IAAAoB,EAAA1B,WAEA2I,EAAAZ,GAIA,SAAA1D,EAAA0D,GAEA,QAAArG,EAAA7C,QAAA,CAIA,OAFAkJ,EAAAe,iBAEAf,EAAAiB,QAAA1R,QAEA,OAEA,QAAAoK,EAAA5B,aAAA,OAEAiJ,EAAAhB,GAEAvK,EAAAyE,EAAAgD,aAEA,MAEA,OAEA,QAAAvD,EAAA9B,aAAA,IAAA8B,EAAA1B,UAAA,OAEAmJ,EAAApB,GAEAvK,EAAAyE,EAAAiD,gBAEA,MAEA,QAEA1H,EAAAyE,EAAAC,KAIA1E,IAAAyE,EAAAC,MAEAR,EAAAI,cAAA8C,IAMA,SAAAL,EAAAwD,GAEA,QAAArG,EAAA7C,QAKA,OAHAkJ,EAAAe,iBACAf,EAAAiC,kBAEAjC,EAAAiB,QAAA1R,QAEA,OAEA,QAAAoK,EAAA5B,aAAA,OACA,GAAAtC,IAAAyE,EAAAgD,aAAA,OAEAsE,EAAAxB,GAEA,MAEA,OAEA,QAAArG,EAAA9B,aAAA,IAAA8B,EAAA1B,UAAA,OACA,GAAAxC,IAAAyE,EAAAiD,gBAAA,OAEAsE,EAAAzB,GAEA,MAEA,QAEAvK,EAAAyE,EAAAC,MAMA,SAAAoC,GAAAyD,IAEA,IAAArG,EAAA7C,UAEA4K,EAAA1B,GAEArG,EAAAI,cAAA+C,GAEArH,EAAAyE,EAAAC,MAIA,SAAAgC,GAAA6D,IAEA,IAAArG,EAAA7C,SAEAkJ,EAAAe,iBAMApH,EAAA/C,WAAAoL,iBAAA,cAAA7F,IAAA,GAEAxC,EAAA/C,WAAAoL,iBAAA,YAAA5F,GAAA,GACAzC,EAAA/C,WAAAoL,iBAAA,QAAA3F,GAAA,GAEA1C,EAAA/C,WAAAoL,iBAAA,aAAA1F,GAAA,GACA3C,EAAA/C,WAAAoL,iBAAA,WAAAzF,IAAA,GACA5C,EAAA/C,WAAAoL,iBAAA,YAAAxF,GAAA,GAEAjK,OAAAyP,iBAAA,UAAArF,GAAA,GAIAxO,KAAA8L,UAIApH,EAAA6D,cAAA3B,UAAAnH,OAAA4D,OAAAqB,EAAAqP,gBAAAnN,WACAlC,EAAA6D,cAAA3B,UAAAE,YAAApC,EAAA6D,cAEA9I,OAAA8D,iBAAAmB,EAAA6D,cAAA3B,UAAA,CAEAoN,OAAA,CAEAjU,IAAA,WAGA,OADAwR,QAAAC,KAAA,4DACAxR,KAAA4I,SAQAqL,OAAA,CAEAlU,IAAA,WAGA,OADAwR,QAAAC,KAAA,+EACAxR,KAAA0J,YAIArH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,8EACAxR,KAAA0J,YAAAzJ,IAMAiU,SAAA,CAEAnU,IAAA,WAGA,OADAwR,QAAAC,KAAA,mFACAxR,KAAA4J,cAIAvH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,kFACAxR,KAAA4J,cAAA3J,IAMAkU,MAAA,CAEApU,IAAA,WAGA,OADAwR,QAAAC,KAAA,6EACAxR,KAAA8J,WAIAzH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,4EACAxR,KAAA8J,WAAA7J,IAMAmU,OAAA,CAEArU,IAAA,WAGA,OADAwR,QAAAC,KAAA,+EACAxR,KAAAoK,YAIA/H,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,8EACAxR,KAAAoK,YAAAnK,IAMAoU,aAAA,CAEAtU,IAAA,WAGA,OADAwR,QAAAC,KAAA,wFACAxR,KAAAwJ,eAIAnH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,uFACAxR,KAAAwJ,eAAAvJ,IAMAqU,qBAAA,CAEAvU,IAAA,WAGA,OADAwR,QAAAC,KAAA,4FACAxR,KAAAyJ,eAIApH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,4FACAxR,KAAAyJ,cAAAxJ,8BC1iCAvD,EAAQ,QACR,IAAA6X,EAAc7X,EAAQ,QAAqB+C,OAC3C+E,EAAAC,QAAA,SAAAtE,EAAAC,EAAAoU,GACA,OAAAD,EAAAjR,eAAAnD,EAAAC,EAAAoU,4BCHA,IAAA3X,EAAcH,EAAQ,QAEtBG,IAAAmG,EAAAnG,EAAA4F,GAAiC/F,EAAQ,QAAgB,UAAc4G,eAAiB5G,EAAQ,QAAc6B,4BCD9G,IAAAkW,EAAc/X,EAAQ,QACtBgY,EAAWhY,EAAQ,QACnBiY,EAAUjY,EAAQ,QAClB8H,EAAAC,QAAA,SAAAtE,GACA,IAAA0B,EAAA4S,EAAAtU,GACAyU,EAAAF,EAAAnW,EACA,GAAAqW,EAAA,CACA,IAGAxU,EAHAyU,EAAAD,EAAAzU,GACAhB,EAAAwV,EAAApW,EACA2C,EAAA,EAEA,MAAA2T,EAAAzT,OAAAF,EAAA/B,EAAAsC,KAAAtB,EAAAC,EAAAyU,EAAA3T,OAAAW,EAAAC,KAAA1B,GACG,OAAAyB,yBCZH,IAAA6C,EAAYhI,EAAQ,QAmBpBgI,EAAAoQ,YAAA,SAAAtM,EAAAC,GAEAzI,KAAAwI,SAEAxI,KAAAyI,gBAAAnH,IAAAmH,IAAAC,SAGA1I,KAAA2I,SAAA,EAGA3I,KAAA4I,OAAA,IAAAlE,EAAAmE,QAGA7I,KAAA8I,YAAA,EACA9I,KAAA+I,YAAAC,IAGAhJ,KAAAiJ,QAAA,EACAjJ,KAAAkJ,QAAAF,IAIAhJ,KAAAmJ,cAAA,EACAnJ,KAAAoJ,cAAAnF,KAAAoF,GAIArJ,KAAAsJ,iBAAAN,IACAhJ,KAAAuJ,gBAAAP,IAIAhJ,KAAAwJ,eAAA,EACAxJ,KAAAyJ,cAAA,IAIAzJ,KAAA0J,YAAA,EACA1J,KAAA2J,UAAA,EAGA3J,KAAA4J,cAAA,EACA5J,KAAA6J,YAAA,EAGA7J,KAAA8J,WAAA,EACA9J,KAAA+J,SAAA,EACA/J,KAAAgK,oBAAA,EACAhK,KAAAiK,YAAA,EAIAjK,KAAAkK,YAAA,EACAlK,KAAAmK,gBAAA,EAGAnK,KAAAoK,YAAA,EAGApK,KAAAiB,KAAA,CAAcoJ,KAAA,GAAAC,GAAA,GAAAC,MAAA,GAAAC,OAAA,IAGdxK,KAAAyK,aAAA,CAAsBJ,KAAA3F,EAAAgG,MAAAL,KAAAM,OAAAjG,EAAAgG,MAAAC,OAAAJ,MAAA7F,EAAAgG,MAAAH,OAGtBvK,KAAA4K,QAAA5K,KAAA4I,OAAAiC,QACA7K,KAAA8K,UAAA9K,KAAAwI,OAAAuC,SAAAF,QACA7K,KAAAgL,MAAAhL,KAAAwI,OAAAyC,KAMAjL,KAAAkL,cAAA,WAEA,OAAAC,EAAAC,KAIApL,KAAAqL,kBAAA,WAEA,OAAAF,EAAAG,OAIAtL,KAAAuL,UAAA,WAEAC,EAAAZ,QAAAa,KAAAD,EAAA5C,QACA4C,EAAAV,UAAAW,KAAAD,EAAAhD,OAAAuC,UACAS,EAAAR,MAAAQ,EAAAhD,OAAAyC,MAIAjL,KAAA0L,MAAA,WAEAF,EAAA5C,OAAA6C,KAAAD,EAAAZ,SACAY,EAAAhD,OAAAuC,SAAAU,KAAAD,EAAAV,WACAU,EAAAhD,OAAAyC,KAAAO,EAAAR,MAEAQ,EAAAhD,OAAAmD,yBACAH,EAAAI,cAAAC,GAEAL,EAAAM,SAEAxE,EAAAyE,EAAAC,MAKAhM,KAAA8L,OAAA,WAEA,IAAAG,EAAA,IAAAvH,EAAAmE,QAGAqD,GAAA,IAAAxH,EAAAyH,YAAAC,mBAAA5D,EAAA6D,GAAA,IAAA3H,EAAAmE,QAAA,QACAyD,EAAAJ,EAAArB,QAAAlE,UAEA4F,EAAA,IAAA7H,EAAAmE,QACA2D,EAAA,IAAA9H,EAAAyH,WAEA,kBAEA,IAAApB,EAAAS,EAAAhD,OAAAuC,SAkEA,OAhEAkB,EAAAR,KAAAV,GAAA0B,IAAAjB,EAAA5C,QAGAqD,EAAAS,gBAAAR,GAGAf,EAAAwB,eAAAV,GAEAT,EAAAtB,YAAA5C,IAAAyE,EAAAC,MAEAY,EAAAC,KAIA1B,EAAAG,OAAAwB,EAAAxB,MACAH,EAAAC,KAAA0B,EAAA1B,IAGAD,EAAAG,MAAArH,KAAA8I,IAAAvB,EAAAlC,gBAAArF,KAAA+I,IAAAxB,EAAAjC,gBAAA4B,EAAAG,QAGAH,EAAAC,IAAAnH,KAAA8I,IAAAvB,EAAArC,cAAAlF,KAAA+I,IAAAxB,EAAApC,cAAA+B,EAAAC,MAEAD,EAAA8B,WAGA9B,EAAA+B,QAAAC,EAGAhC,EAAA+B,OAAAjJ,KAAA8I,IAAAvB,EAAA1C,YAAA7E,KAAA+I,IAAAxB,EAAAzC,YAAAoC,EAAA+B,SAGA1B,EAAA5C,OAAAwE,IAAAC,GAEApB,EAAAqB,iBAAAnC,GAGAc,EAAAS,gBAAAJ,GAEAvB,EAAAU,KAAAD,EAAA5C,QAAAwE,IAAAnB,GAEAT,EAAAhD,OAAA+E,OAAA/B,EAAA5C,SAEA,IAAA4C,EAAAhC,eAEAsD,EAAAxB,OAAA,EAAAE,EAAA/B,cACAqD,EAAA1B,KAAA,EAAAI,EAAA/B,cAEA4D,EAAAG,eAAA,EAAAhC,EAAA/B,iBAIAqD,EAAAzK,IAAA,OAEAgL,EAAAhL,IAAA,QAIA8K,EAAA,KAMAM,GACAlB,EAAAmB,kBAAAlC,EAAAhD,OAAAuC,UAAA4C,GACA,KAAAnB,EAAAoB,IAAApC,EAAAhD,OAAAqF,aAAAF,KAEAnC,EAAAI,cAAAC,GAEAU,EAAAd,KAAAD,EAAAhD,OAAAuC,UACAyB,EAAAf,KAAAD,EAAAhD,OAAAqF,YACAJ,GAAA,GAEA,IAzFA,GAmGAzN,KAAA8N,QAAA,WAEAtC,EAAA/C,WAAAsF,oBAAA,cAAAC,IAAA,GACAxC,EAAA/C,WAAAsF,oBAAA,YAAAE,IAAA,GACAzC,EAAA/C,WAAAsF,oBAAA,QAAAG,IAAA,GAEA1C,EAAA/C,WAAAsF,oBAAA,aAAAI,IAAA,GACA3C,EAAA/C,WAAAsF,oBAAA,WAAAK,IAAA,GACA5C,EAAA/C,WAAAsF,oBAAA,YAAAM,IAAA,GAEA3F,SAAAqF,oBAAA,YAAAO,IAAA,GACA5F,SAAAqF,oBAAA,UAAAQ,IAAA,GAEAnK,OAAA2J,oBAAA,UAAAS,IAAA,IAUA,IAAAhD,EAAAxL,KAEA6L,EAAA,CAAoB4C,KAAA,UACpBC,EAAA,CAAmBD,KAAA,SACnBE,EAAA,CAAiBF,KAAA,OAEjB1C,EAAA,CACAC,KAAA,EACA+I,UAAA,EACAC,YAAA,EACApG,OAAA,EACAC,MAAA,EACAoG,aAAA,EACAnG,IAAA,EACAoG,UAAA,IAGA5N,EAAAyE,EAAAC,KAEA2B,EAAA,KAGAxC,EAAA,IAAAzG,EAAAuK,UACAnC,EAAA,IAAApI,EAAAuK,UAEA9B,EAAA,EACAE,EAAA,IAAA3I,EAAAmE,QACA4E,GAAA,EAEAyB,EAAA,IAAAxK,EAAAK,QACAoQ,EAAA,IAAAzQ,EAAAK,QACAoK,EAAA,IAAAzK,EAAAK,QACAqQ,EAAA,IAAA1Q,EAAAK,QACAqK,EAAA,IAAA1K,EAAAK,QACAsQ,EAAA,IAAA3Q,EAAAK,QACAuQ,EAAA,IAAA5Q,EAAAK,QACAwQ,EAAA,IAAA7Q,EAAAK,QAEAsK,EAAA,IAAA3K,EAAAK,QACAuK,EAAA,IAAA5K,EAAAK,QACAwK,EAAA,IAAA7K,EAAAK,QAEAyK,EAAA,IAAA9K,EAAAK,QACA0K,EAAA,IAAA/K,EAAAK,QACA2K,EAAA,IAAAhL,EAAAK,QAEA,SAAA8H,IAEA,SAAA5I,KAAAoF,GAAA,MAAAmC,EAAArB,gBAIA,SAAAwF,IAEA,OAAA1L,KAAA2L,IAAA,IAAApE,EAAA7B,WAIA,SAAAiD,EAAAiD,GAEA/C,EAAAxB,OAAAuE,EAIA,SAAAC,EAAAD,GAEA/C,EAAA1B,KAAAyE,EAIA,IAAAE,EAAA,WAEA,IAAAC,EAAA,IAAAtL,EAAAmE,QAEA,gBAAAoH,EAAAC,GAEAF,EAAAG,oBAAAD,EAAA,GACAF,EAAAxC,gBAAAyC,GAEA5C,EAAAD,IAAA4C,IATA,GAeAI,EAAA,WAEA,IAAAJ,EAAA,IAAAtL,EAAAmE,QAEA,gBAAAoH,EAAAC,IAEA,IAAA1E,EAAAxB,mBAEAgG,EAAAG,oBAAAD,EAAA,IAIAF,EAAAG,oBAAAD,EAAA,GACAF,EAAAK,aAAA7E,EAAAhD,OAAA6D,GAAA2D,IAIAA,EAAAxC,eAAAyC,GAEA5C,EAAAD,IAAA4C,IAnBA,GA0BAM,EAAA,WAEA,IAAArE,EAAA,IAAAvH,EAAAmE,QAEA,gBAAA0H,EAAAC,GAEA,IAAAC,EAAAjF,EAAA/C,aAAAC,SAAA8C,EAAA/C,WAAAiI,KAAAlF,EAAA/C,WAEA,GAAA+C,EAAAhD,OAAAmI,oBAAA,CAGA,IAAA5F,EAAAS,EAAAhD,OAAAuC,SACAkB,EAAAR,KAAAV,GAAA0B,IAAAjB,EAAA5C,QACA,IAAAgI,EAAA3E,EAAA7K,SAGAwP,GAAA3M,KAAA4M,IAAArF,EAAAhD,OAAAsI,IAAA,EAAA7M,KAAAoF,GAAA,KAGA0G,EAAA,EAAAQ,EAAAK,EAAAH,EAAAM,aAAAvF,EAAAhD,OAAAwI,QACAZ,EAAA,EAAAI,EAAAI,EAAAH,EAAAM,aAAAvF,EAAAhD,OAAAwI,aAEIxF,EAAAhD,OAAAyI,sBAGJlB,EAAAQ,GAAA/E,EAAAhD,OAAA0I,MAAA1F,EAAAhD,OAAA2I,MAAA3F,EAAAhD,OAAAyC,KAAAwF,EAAAW,YAAA5F,EAAAhD,OAAAwI,QACAZ,EAAAI,GAAAhF,EAAAhD,OAAA6I,IAAA7F,EAAAhD,OAAA8I,QAAA9F,EAAAhD,OAAAyC,KAAAwF,EAAAM,aAAAvF,EAAAhD,OAAAwI,UAKAO,QAAAC,KAAA,8EACAhG,EAAA1B,WAAA,IAhCA,GAwCA,SAAA2H,EAAAC,GAEAlG,EAAAhD,OAAAmI,oBAEAxD,GAAAuE,EAEGlG,EAAAhD,OAAAyI,sBAEHzF,EAAAhD,OAAAyC,KAAAhH,KAAA8I,IAAAvB,EAAAvC,QAAAhF,KAAA+I,IAAAxB,EAAAtC,QAAAsC,EAAAhD,OAAAyC,KAAAyG,IACAlG,EAAAhD,OAAAmD,yBACA8B,GAAA,IAIA8D,QAAAC,KAAA,qFACAhG,EAAA9B,YAAA,GAMA,SAAAiI,EAAAD,GAEAlG,EAAAhD,OAAAmI,oBAEAxD,GAAAuE,EAEGlG,EAAAhD,OAAAyI,sBAEHzF,EAAAhD,OAAAyC,KAAAhH,KAAA8I,IAAAvB,EAAAvC,QAAAhF,KAAA+I,IAAAxB,EAAAtC,QAAAsC,EAAAhD,OAAAyC,KAAAyG,IACAlG,EAAAhD,OAAAmD,yBACA8B,GAAA,IAIA8D,QAAAC,KAAA,qFACAhG,EAAA9B,YAAA,GAUA,SAAAkI,EAAAC,GAIA3C,EAAA7M,IAAAwP,EAAAC,QAAAD,EAAAE,SAIA,SAAAC,EAAAH,GAIArC,EAAAnN,IAAAwP,EAAAC,QAAAD,EAAAE,SAIA,SAAAE,EAAAJ,GAIAxC,EAAAhN,IAAAwP,EAAAC,QAAAD,EAAAE,SAIA,SAAAG,EAAAL,GAIA1C,EAAA9M,IAAAwP,EAAAC,QAAAD,EAAAE,SAEA3C,EAAA+C,WAAAhD,EAAAD,GAAA1B,eAAAhC,EAAA3B,aAEA,IAAA4G,EAAAjF,EAAA/C,aAAAC,SAAA8C,EAAA/C,WAAAiI,KAAAlF,EAAA/C,WAEAmE,EAAA,EAAA3I,KAAAoF,GAAA+F,EAAAxJ,EAAA6K,EAAAM,cAEAjB,EAAA,EAAA7L,KAAAoF,GAAA+F,EAAAgD,EAAA3B,EAAAM,cAEA7B,EAAAzD,KAAA0D,GAEA3D,EAAAM,SAIA,SAAAuG,EAAAR,GAIApC,EAAApN,IAAAwP,EAAAC,QAAAD,EAAAE,SAEArC,EAAAyC,WAAA1C,EAAAD,GAEAE,EAAA0C,EAAA,EAEAX,EAAA9B,KAEGD,EAAA0C,EAAA,GAEHT,EAAAhC,KAIAH,EAAA/D,KAAAgE,GAEAjE,EAAAM,SAIA,SAAAwG,EAAAT,GAIAvC,EAAAjN,IAAAwP,EAAAC,QAAAD,EAAAE,SAEAxC,EAAA4C,WAAA7C,EAAAD,GAAA7B,eAAAhC,EAAAzB,UAEAuG,EAAAf,EAAA3J,EAAA2J,EAAA6C,GAEA/C,EAAA5D,KAAA6D,GAEA9D,EAAAM,SAIA,SAAAyG,EAAAV,IAMA,SAAAW,EAAAX,GAIAA,EAAArB,OAAA,EAEAmB,EAAAhC,KAEGkC,EAAArB,OAAA,GAEHiB,EAAA9B,KAIAnE,EAAAM,SAIA,SAAA2G,EAAAZ,GAIA,OAAAA,EAAAc,SAEA,KAAAnH,EAAAvK,KAAAqJ,GACAgG,EAAA,EAAA9E,EAAAvB,aACAuB,EAAAM,SACA,MAEA,KAAAN,EAAAvK,KAAAuJ,OACA8F,EAAA,GAAA9E,EAAAvB,aACAuB,EAAAM,SACA,MAEA,KAAAN,EAAAvK,KAAAoJ,KACAiG,EAAA9E,EAAAvB,YAAA,GACAuB,EAAAM,SACA,MAEA,KAAAN,EAAAvK,KAAAsJ,MACA+F,GAAA9E,EAAAvB,YAAA,GACAuB,EAAAM,SACA,OAMA,SAAA+G,EAAAhB,GAKA3C,EAAA7M,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAGAmC,EAAA9S,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAIA,SAAAwC,EAAA3D,GAEA,GAAArG,EAAA9B,WAAA,CAIA,IAAAwJ,EAAArB,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAC,MACAI,EAAAtB,EAAAiB,QAAA,GAAAE,MAAAnB,EAAAiB,QAAA,GAAAE,MAEA/C,EAAAhM,KAAAmP,KAAAF,IAAAC,KAEA3D,EAAAnN,IAAA,EAAA4N,IAMA,SAAAwF,EAAA5D,GAEArG,EAAA1B,WAIAuF,EAAAhN,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAMA,SAAAK,EAAAxB,GAEA,QAAArG,EAAA5B,cACA,KAAAtC,EAAAyE,EAAA6C,QAAA,CAaA,GAVAO,EAAA9M,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAGAoC,EAAA/S,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAEA5D,EAAA+C,WAAAhD,EAAAD,GACAmG,EAAAlD,WAAAiD,EAAAD,GACAG,EAAAnD,WAAAgD,EAAAjG,GACAqG,EAAApD,WAAAiD,EAAAjG,GAEAuG,IAAA,CAEA,IAAAjF,EAAAjF,EAAA/C,aAAAC,SAAA8C,EAAA/C,WAAAiI,KAAAlF,EAAA/C,WAGAqH,EAAA,EAAA7L,KAAAoF,GAAA+F,EAAAgD,EAAA3B,EAAAM,cAGAzJ,EAAAyE,EAAAgJ,eAEG,KAAAzN,EAAAyE,EAAAiJ,cAEHpI,GAAA0I,EAAAzF,QAAA0F,EAAA1F,SAAArE,EAAA3B,aAIAqF,EAAAzD,KAAA0D,GACAgG,EAAA1J,KAAA2J,IAIA,SAAAM,IAGA,QAAAC,EAAAL,OAOAK,EAAAJ,OAOAK,EAAAxG,OAOAwG,EAAAP,IAOAjG,EAAAxB,IAAAyH,GAAA,KAIA,IAAAM,EAAA,WAEA,IAAAE,EAAA5R,KAAA6R,IAAA7R,KAAAoF,GAAA,GAEA,gBAAA0M,GAEA,OAAA9R,KAAA+R,IAAA/R,KAAA6R,IAAAC,EAAAlG,UAAAgG,GANA,GAYAD,EAAA,WAEA,IAAAC,EAAA5R,KAAAgS,IAAAhS,KAAAoF,GAAA,EAAApF,KAAAoF,GAAA,GAEA,gBAAA0M,GAEA,OAAA9R,KAAA+R,IAAA/R,KAAAgS,IAAAF,EAAAlG,UAAAgG,GANA,GAYA,SAAAK,GAAArE,GAEA,QAAArG,EAAA9B,YACA,KAAApC,EAAAyE,EAAA8C,OAAA,CAIA,IAAAqE,EAAArB,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAC,MACAI,EAAAtB,EAAAiB,QAAA,GAAAE,MAAAnB,EAAAiB,QAAA,GAAAE,MAEA/C,EAAAhM,KAAAmP,KAAAF,IAAAC,KAEA1D,EAAApN,IAAA,EAAA4N,GAEAP,EAAArN,IAAA,EAAA4B,KAAA2L,IAAAH,EAAA2C,EAAA5C,EAAA4C,EAAA5G,EAAA7B,YAEA8H,EAAA/B,EAAA0C,GAEA5C,EAAA/D,KAAAgE,IAIA,SAAA0G,GAAAtE,IAEA,IAAArG,EAAA1B,WACA,KAAAxC,EAAAyE,EAAA+C,OAIAQ,EAAAjN,IAAAwP,EAAAiB,QAAA,GAAAC,MAAAlB,EAAAiB,QAAA,GAAAE,OAEAzD,EAAA4C,WAAA7C,EAAAD,GAAA7B,eAAAhC,EAAAzB,UAEAuG,EAAAf,EAAA3J,EAAA2J,EAAA6C,GAEA/C,EAAA5D,KAAA6D,IAIA,SAAAiE,GAAA1B,IAUA,SAAA5D,GAAA4D,GAEA,QAAArG,EAAA7C,QAAA,CAIA,OAFAkJ,EAAAe,iBAEAf,EAAA4B,QAEA,KAAAjI,EAAAf,aAAAJ,KAEA,GAAAwH,EAAA6B,SAAA7B,EAAA8B,SAAA9B,EAAA+B,SAAA,CAEA,QAAApI,EAAA5B,aAAA,OAEAgI,EAAAC,GAEAvK,EAAAyE,EAAA6C,WAEK,CAEL,QAAApD,EAAA1B,UAAA,OAEAmI,EAAAJ,GAEAvK,EAAAyE,EAAA+C,IAIA,MAEA,KAAAtD,EAAAf,aAAAE,OAEA,QAAAa,EAAA9B,WAAA,OAEAsI,EAAAH,GAEAvK,EAAAyE,EAAA8C,MAEA,MAEA,KAAArD,EAAAf,aAAAF,MAEA,QAAAiB,EAAA5B,aAAA,OAEAgI,EAAAC,GAEAvK,EAAAyE,EAAA6C,OAEA,MAIAtH,IAAAyE,EAAAC,OAEAtD,SAAAmL,iBAAA,YAAAvF,IAAA,GACA5F,SAAAmL,iBAAA,UAAAtF,IAAA,GAEA/C,EAAAI,cAAA8C,KAMA,SAAAJ,GAAAuD,GAEA,QAAArG,EAAA7C,QAIA,OAFAkJ,EAAAe,iBAEAtL,GAEA,KAAAyE,EAAA6C,OAEA,QAAApD,EAAA5B,aAAA,OAEAsI,EAAAL,GAEA,MAEA,KAAA9F,EAAA8C,MAEA,QAAArD,EAAA9B,WAAA,OAEA2I,EAAAR,GAEA,MAEA,KAAA9F,EAAA+C,IAEA,QAAAtD,EAAA1B,UAAA,OAEAwI,EAAAT,GAEA,OAMA,SAAAtD,GAAAsD,IAEA,IAAArG,EAAA7C,UAEA4J,EAAAV,GAEAnJ,SAAAqF,oBAAA,YAAAO,IAAA,GACA5F,SAAAqF,oBAAA,UAAAQ,IAAA,GAEA/C,EAAAI,cAAA+C,GAEArH,EAAAyE,EAAAC,MAIA,SAAAkC,GAAA2D,IAEA,IAAArG,EAAA7C,UAAA,IAAA6C,EAAA9B,YAAApC,IAAAyE,EAAAC,MAAA1E,IAAAyE,EAAA6C,SAEAiD,EAAAe,iBACAf,EAAAiC,kBAEAtI,EAAAI,cAAA8C,GAEA8D,EAAAX,GAEArG,EAAAI,cAAA+C,IAIA,SAAAH,GAAAqD,IAEA,IAAArG,EAAA7C,UAAA,IAAA6C,EAAApB,aAAA,IAAAoB,EAAA1B,WAEA2I,EAAAZ,GAIA,SAAA1D,GAAA0D,GAEA,QAAArG,EAAA7C,QAAA,CAIA,OAFAkJ,EAAAe,iBAEAf,EAAAiB,QAAA1R,QAEA,OAEA,QAAAoK,EAAA1B,UAAA,OAEA2L,EAAA5D,GAEAvK,EAAAyE,EAAA+C,IAEA,MAEA,OAEA,QAAAtD,EAAA9B,aAAA,IAAA8B,EAAA5B,aAAA,OAEAiJ,EAAAhB,GACA2D,EAAA3D,GAEAvK,EAAAyE,EAAAkJ,aAEA,MAEA,QAEA3N,EAAAyE,EAAAC,KAIA1E,IAAAyE,EAAAC,MAEAR,EAAAI,cAAA8C,IAMA,SAAAL,GAAAwD,GAEA,QAAArG,EAAA7C,QAKA,OAHAkJ,EAAAe,iBACAf,EAAAiC,kBAEAjC,EAAAiB,QAAA1R,QAEA,OAEA,QAAAoK,EAAA1B,UAAA,OACA,GAAAxC,IAAAyE,EAAA+C,IAAA,OAEAqH,GAAAtE,GAEArG,EAAAM,SAEA,MAEA,OAEA,QAAAN,EAAA9B,aAAA,IAAA8B,EAAA5B,aAAA,OACA,QAAAtC,EAAAyE,EAAAkJ,cAAA,OAEA5B,EAAAxB,GACAqE,GAAArE,GAEArG,EAAAM,SAEA,MAEA,QAEAxE,EAAAyE,EAAAC,MAMA,SAAAoC,GAAAyD,IAEA,IAAArG,EAAA7C,UAEA4K,GAAA1B,GAEArG,EAAAI,cAAA+C,GAEArH,EAAAyE,EAAAC,MAIA,SAAAgC,GAAA6D,IAEA,IAAArG,EAAA7C,SAEAkJ,EAAAe,iBAMApH,EAAA/C,WAAAoL,iBAAA,cAAA7F,IAAA,GAEAxC,EAAA/C,WAAAoL,iBAAA,YAAA5F,IAAA,GACAzC,EAAA/C,WAAAoL,iBAAA,QAAA3F,IAAA,GAEA1C,EAAA/C,WAAAoL,iBAAA,aAAA1F,IAAA,GACA3C,EAAA/C,WAAAoL,iBAAA,WAAAzF,IAAA,GACA5C,EAAA/C,WAAAoL,iBAAA,YAAAxF,IAAA,GAEAjK,OAAAyP,iBAAA,UAAArF,IAAA,GAIAxO,KAAA8L,UAIApH,EAAAoQ,YAAAlO,UAAAnH,OAAA4D,OAAAqB,EAAAqP,gBAAAnN,WACAlC,EAAAoQ,YAAAlO,UAAAE,YAAApC,EAAAoQ,YAEArV,OAAA8D,iBAAAmB,EAAAoQ,YAAAlO,UAAA,CAEAoN,OAAA,CAEAjU,IAAA,WAGA,OADAwR,QAAAC,KAAA,0DACAxR,KAAA4I,SAQAqL,OAAA,CAEAlU,IAAA,WAGA,OADAwR,QAAAC,KAAA,6EACAxR,KAAA0J,YAIArH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,4EACAxR,KAAA0J,YAAAzJ,IAMAiU,SAAA,CAEAnU,IAAA,WAGA,OADAwR,QAAAC,KAAA,iFACAxR,KAAA4J,cAIAvH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,gFACAxR,KAAA4J,cAAA3J,IAMAkU,MAAA,CAEApU,IAAA,WAGA,OADAwR,QAAAC,KAAA,2EACAxR,KAAA8J,WAIAzH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,0EACAxR,KAAA8J,WAAA7J,IAMAmU,OAAA,CAEArU,IAAA,WAGA,OADAwR,QAAAC,KAAA,6EACAxR,KAAAoK,YAIA/H,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,4EACAxR,KAAAoK,YAAAnK,IAMAoU,aAAA,CAEAtU,IAAA,WAGA,OADAwR,QAAAC,KAAA,sFACAxR,KAAAwJ,eAIAnH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,qFACAxR,KAAAwJ,eAAAvJ,IAMAqU,qBAAA,CAEAvU,IAAA,WAGA,OADAwR,QAAAC,KAAA,0FACAxR,KAAAyJ,eAIApH,IAAA,SAAApC,GAEAsR,QAAAC,KAAA,0FACAxR,KAAAyJ,cAAAxJ,4BC9nCA,IAAAyE,EAAYhI,EAAQ,QASpBgI,EAAA0R,yBAAA,CAEAC,SAAA,qBAEAzR,SAAA,CAEAC,SAAA,CAAe5E,MAAA,MACfqW,oBAAA,CAA0BrW,MAAA,GAC1BsW,YAAA,CAAkBtW,MAAA,GAClBuW,aAAA,CAAmBvW,MAAA,IAAAyE,EAAA+R,MAAA,IACnBC,eAAA,CAAqBzW,MAAA,IAIrB+E,aAAA,CAEA,oBAEA,gBAEA,YAEA,4EAEA,KAEAC,KAAA,MAEAC,eAAA,CAEA,8BACA,6BACA,gCACA,qCACA,6BAEA,oBAEA,gBAEA,2CAEA,2CAEA,oCAEA,+DAEA,yFAEA,mDAEA,KAEAD,KAAA,+BC/DA,IAAAP,EAAYhI,EAAQ,QAMpBgI,EAAAiS,eAAA,SAAA3P,EAAA4P,GAIA,GAFA5W,KAAAgH,gBAEA1F,IAAAsV,EAAA,CAEA,IAAAC,EAAA,CACAC,UAAApS,EAAAqS,aACAC,UAAAtS,EAAAqS,aACAE,OAAAvS,EAAAwS,WACAC,eAAA,GAGAC,EAAApQ,EAAAqQ,QAAA,IAAA3S,EAAAK,SACA/E,KAAAsX,YAAAtQ,EAAAuQ,gBACAvX,KAAAwX,OAAAJ,EAAAK,MACAzX,KAAA0X,QAAAN,EAAAO,OAEAf,EAAA,IAAAlS,EAAAkT,kBAAA5X,KAAAwX,OAAAxX,KAAAsX,YAAAtX,KAAA0X,QAAA1X,KAAAsX,YAAAT,GACAD,EAAAiB,QAAAvV,KAAA,0BAIAtC,KAAAsX,YAAA,EACAtX,KAAAwX,OAAAZ,EAAAa,MACAzX,KAAA0X,QAAAd,EAAAe,OAIA3X,KAAA8X,cAAAlB,EACA5W,KAAA+X,cAAAnB,EAAA/L,QACA7K,KAAA+X,cAAAF,QAAAvV,KAAA,qBAEAtC,KAAAiH,YAAAjH,KAAA8X,cACA9X,KAAAkH,WAAAlH,KAAA+X,cAEA/X,KAAAgY,gBAAA,EAEAhY,KAAAiY,OAAA,QAIA3W,IAAAoD,EAAAwT,YAEA3G,QAAA4G,MAAA,wDAIA7W,IAAAoD,EAAA0T,YAEA7G,QAAA4G,MAAA,mDAIAnY,KAAAqY,SAAA,IAAA3T,EAAA0T,WAAA1T,EAAAwT,YAEAlY,KAAAsY,MAAA,IAAA5T,EAAA6T,OAIA9Y,OAAAoH,OAAAnC,EAAAiS,eAAA/P,UAAA,CAEA4R,YAAA,WAEA,IAAAC,EAAAzY,KAAAkH,WACAlH,KAAAkH,WAAAlH,KAAAiH,YACAjH,KAAAiH,YAAAwR,GAIAC,QAAA,SAAAC,GAEA3Y,KAAAiY,OAAAnW,KAAA6W,GAEA,IAAAvB,EAAApX,KAAAgH,SAAA4R,qBAAA,IAAAlU,EAAAK,SACA4T,EAAAE,QAAAzB,EAAAK,MAAAL,EAAAO,SAIAmB,WAAA,SAAAH,EAAAI,GAEA/Y,KAAAiY,OAAAe,OAAAD,EAAA,EAAAJ,IAIAM,kBAAA,SAAAC,GAEA,QAAAhY,EAAAgY,EAAA,EAA8BhY,EAAAlB,KAAAiY,OAAA7W,OAAwBF,IAEtD,GAAAlB,KAAAiY,OAAA/W,GAAAyH,QAEA,SAMA,UAIA5B,OAAA,SAAAoS,QAIA7X,IAAA6X,IAEAA,EAAAnZ,KAAAsY,MAAAc,YAIA,IAIAT,EAAAzX,EAJAmY,EAAArZ,KAAAgH,SAAAsS,kBAEAC,GAAA,EAEAC,EAAAxZ,KAAAiY,OAAA7W,OAEA,IAAAF,EAAA,EAAcA,EAAAsY,EAAQtY,IAItB,GAFAyX,EAAA3Y,KAAAiY,OAAA/W,IAEA,IAAAyX,EAAAhQ,QAAA,CAKA,GAHAgQ,EAAAX,eAAAhY,KAAAgY,gBAAAhY,KAAAiZ,kBAAA/X,GACAyX,EAAA5R,OAAA/G,KAAAgH,SAAAhH,KAAAiH,YAAAjH,KAAAkH,WAAAiS,EAAAI,GAEAZ,EAAAjS,UAAA,CAEA,GAAA6S,EAAA,CAEA,IAAAlS,EAAArH,KAAAgH,SAAAK,QAEAA,EAAAoS,YAAApS,EAAAqS,SAAA,cAEA1Z,KAAAqY,SAAAtR,OAAA/G,KAAAgH,SAAAhH,KAAAiH,YAAAjH,KAAAkH,WAAAiS,GAEA9R,EAAAoS,YAAApS,EAAAe,MAAA,cAIApI,KAAAwY,mBAIAlX,IAAAoD,EAAA2B,WAEAsS,aAAAjU,EAAA2B,SAEAkT,GAAA,EAEKZ,aAAAjU,EAAA4D,gBAELiR,GAAA,IAQAvZ,KAAAgH,SAAAmB,gBAAAkR,IAIA3N,MAAA,SAAAkL,GAEA,QAAAtV,IAAAsV,EAAA,CAEA,IAAAQ,EAAApX,KAAAgH,SAAAqQ,QAAA,IAAA3S,EAAAK,SACA/E,KAAAsX,YAAAtX,KAAAgH,SAAAuQ,gBACAvX,KAAAwX,OAAAJ,EAAAK,MACAzX,KAAA0X,QAAAN,EAAAO,OAEAf,EAAA5W,KAAA8X,cAAAjN,QACA+L,EAAAiC,QAAA7Y,KAAAwX,OAAAxX,KAAAsX,YAAAtX,KAAA0X,QAAA1X,KAAAsX,aAIAtX,KAAA8X,cAAAhK,UACA9N,KAAA+X,cAAAjK,UACA9N,KAAA8X,cAAAlB,EACA5W,KAAA+X,cAAAnB,EAAA/L,QAEA7K,KAAAiH,YAAAjH,KAAA8X,cACA9X,KAAAkH,WAAAlH,KAAA+X,eAIAc,QAAA,SAAApB,EAAAE,GAEA3X,KAAAwX,OAAAC,EACAzX,KAAA0X,QAAAC,EAEA,IAAAgC,EAAA3Z,KAAAwX,OAAAxX,KAAAsX,YACAsC,EAAA5Z,KAAA0X,QAAA1X,KAAAsX,YAEAtX,KAAA8X,cAAAe,QAAAc,EAAAC,GACA5Z,KAAA+X,cAAAc,QAAAc,EAAAC,GAEA,QAAA1Y,EAAA,EAAkBA,EAAAlB,KAAAiY,OAAA7W,OAAwBF,IAE1ClB,KAAAiY,OAAA/W,GAAA2X,QAAAc,EAAAC,IAMAC,cAAA,SAAAC,GAEA9Z,KAAAsX,YAAAwC,EAEA9Z,KAAA6Y,QAAA7Y,KAAAwX,OAAAxX,KAAA0X,YAOAhT,EAAA8B,KAAA,WAGAxG,KAAA2I,SAAA,EAGA3I,KAAA0G,WAAA,EAGA1G,KAAAyG,OAAA,EAGAzG,KAAAgY,gBAAA,GAIAvY,OAAAoH,OAAAnC,EAAA8B,KAAAI,UAAA,CAEAiS,QAAA,aAEA9R,OAAA,WAEAwK,QAAA4G,MAAA,iEAOAzT,EAAA8B,KAAAuT,eAAA,WAEA,IAAAxT,EAAA,IAAA7B,EAAAsV,oBAAA,cACAC,EAAA,IAAAvV,EAAAwV,oBAAA,KAEAH,EAAA,SAAAI,GAEAna,KAAAoa,MAAA,IAAA1V,EAAA2V,KAAAJ,EAAAE,IA8BA,OA1BA1a,OAAA6D,eAAAyW,EAAAnT,UAAA,YAEA7G,IAAA,WAEA,OAAAC,KAAAoa,MAAAD,UAIA9X,IAAA,SAAApC,GAEAD,KAAAoa,MAAAD,SAAAla,KAMAR,OAAAoH,OAAAkT,EAAAnT,UAAA,CAEAG,OAAA,SAAAC,GAEAA,EAAAD,OAAA/G,KAAAoa,MAAA7T,MAMAwT,EArCA,yBC9PA,IAAAtd,EAAaC,EAAQ,QACrB4d,EAAW5d,EAAQ,QACnB6d,EAAc7d,EAAQ,QACtBY,EAAaZ,EAAQ,QACrB4G,EAAqB5G,EAAQ,QAAc6B,EAC3CiG,EAAAC,QAAA,SAAAnC,GACA,IAAA5D,EAAA4b,EAAA3b,SAAA2b,EAAA3b,OAAA4b,EAAA,GAA0D9d,EAAAkC,QAAA,IAC1D,KAAA2D,EAAAkY,OAAA,IAAAlY,KAAA5D,GAAA4E,EAAA5E,EAAA4D,EAAA,CAAkFrC,MAAA3C,EAAAiB,EAAA+D,8BCNlF,IAAAjE,EAAY3B,EAAQ,QACpB+d,EAAiB/d,EAAQ,QAAkBge,OAAA,sBAE3CjW,EAAAlG,EAAAkB,OAAAgE,qBAAA,SAAAkX,GACA,OAAAtc,EAAAsc,EAAAF,uCCHA,IAAA5d,EAAcH,EAAQ,QACtBke,EAAYle,EAAQ,OAARA,CAA0B,GACtCM,EAAA,OACA6d,GAAA,EAEA7d,IAAA,IAAAoJ,MAAA,GAAApJ,GAAA,WAA0C6d,GAAA,IAC1Che,IAAAmE,EAAAnE,EAAA4F,EAAAoY,EAAA,SACAC,KAAA,SAAAC,GACA,OAAAH,EAAA5a,KAAA+a,EAAA7Y,UAAAd,OAAA,EAAAc,UAAA,QAAAZ,MAGA5E,EAAQ,OAARA,CAA+BM,2BCb/BwH,EAAAC,QAAiB/H,EAAQ,gCCAzBA,EAAQ,QACR8H,EAAAC,QAAiB/H,EAAQ,QAAqB+C,OAAAwB,2BCA9C,IAAA+Z,EAAUte,EAAQ,QAClB8H,EAAAC,QAAA2B,MAAA3I,SAAA,SAAAwd,GACA,eAAAD,EAAAC,0BCHAxW,EAAAlG,EAAAkB,OAAAiE,8CCCA,IAAAgB,EAAYhI,EAAQ,QAQpBgI,EAAAwT,WAAA,CAEAtT,SAAA,CAEAC,SAAA,CAAe5E,MAAA,MACfib,QAAA,CAAejb,MAAA,IAIf+E,aAAA,CAEA,oBAEA,gBAEA,YACA,4EAEA,KAEAC,KAAA,MAEAC,eAAA,CAEA,yBAEA,8BAEA,oBAEA,gBAEA,2CACA,kCAEA,KAEAD,KAAA,6BC9CAT,EAAAC,QAAiB/H,EAAQ,8BC6CzB,IA7CA,IAAAye,EAAiBze,EAAQ,QACzB+X,EAAc/X,EAAQ,QACtBI,EAAeJ,EAAQ,QACvBD,EAAaC,EAAQ,QACrB0e,EAAW1e,EAAQ,QACnB2e,EAAgB3e,EAAQ,QACxBW,EAAUX,EAAQ,QAClB4e,EAAAje,EAAA,YACAke,EAAAle,EAAA,eACAme,EAAAH,EAAAjV,MAEAqV,EAAA,CACAC,aAAA,EACAC,qBAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,eAAA,EACAC,cAAA,EACAC,sBAAA,EACAC,UAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,mBAAA,EACAC,WAAA,EACAC,eAAA,EACAC,cAAA,EACAC,UAAA,EACAC,kBAAA,EACAC,QAAA,EACAC,aAAA,EACAC,eAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,cAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,WAAA,GAGAC,EAAAhJ,EAAAgH,GAAAva,EAAA,EAAoDA,EAAAuc,EAAArc,OAAwBF,IAAA,CAC5E,IAIAd,EAJAsd,EAAAD,EAAAvc,GACAyc,EAAAlC,EAAAiC,GACAE,EAAAnhB,EAAAihB,GACAG,EAAAD,KAAAhX,UAEA,GAAAiX,IACAA,EAAAvC,IAAAF,EAAAyC,EAAAvC,EAAAE,GACAqC,EAAAtC,IAAAH,EAAAyC,EAAAtC,EAAAmC,GACArC,EAAAqC,GAAAlC,EACAmC,GAAA,IAAAvd,KAAA+a,EAAA0C,EAAAzd,IAAAtD,EAAA+gB,EAAAzd,EAAA+a,EAAA/a,IAAA,0BCvDA,IAAAuU,EAAUjY,EAAQ,QAClBqB,EAAiBrB,EAAQ,QACzBmB,EAAgBnB,EAAQ,QACxBoB,EAAkBpB,EAAQ,QAC1BC,EAAUD,EAAQ,QAClBohB,EAAqBphB,EAAQ,QAC7B4B,EAAAmB,OAAA+D,yBAEAiB,EAAAlG,EAAY7B,EAAQ,QAAgB4B,EAAA,SAAAqc,EAAA3Z,GAGpC,GAFA2Z,EAAA9c,EAAA8c,GACA3Z,EAAAlD,EAAAkD,GAAA,GACA8c,EAAA,IACA,OAAAxf,EAAAqc,EAAA3Z,GACG,MAAAsD,IACH,GAAA3H,EAAAge,EAAA3Z,GAAA,OAAAjD,GAAA4W,EAAApW,EAAAkD,KAAAkZ,EAAA3Z,GAAA2Z,EAAA3Z,2BCbA,IAAAnD,EAAgBnB,EAAQ,QACxBgF,EAAgChF,EAAQ,QAAgB6B,EAExD7B,EAAQ,OAARA,CAAuB,sCACvB,gBAAAyD,EAAAC,GACA,OAAAsB,EAAA7D,EAAAsC,GAAAC,4BCLA,IAAAsE,EAAYhI,EAAQ,QASpBgI,EAAAqZ,gBAAA,SAAAjZ,EAAAkZ,EAAA9Q,EAAA+Q,GAEAvZ,EAAA8B,KAAA/E,KAAAzB,MAEAA,KAAAge,cAAA1c,IAAA0c,IAAA,EACAhe,KAAAkN,SACAlN,KAAAie,YACAje,KAAA8E,gBAAAxD,IAAAwD,EAAA,IAAAJ,EAAAK,QAAAD,EAAAc,EAAAd,EAAAsN,GAAA,IAAA1N,EAAAK,QAAA,SAGA/E,KAAAke,WAAA,IAAAxZ,EAAA+R,MAAA,OAGA,IAAA0H,EAAA,CAAarH,UAAApS,EAAAqS,aAAAC,UAAAtS,EAAAqS,aAAAE,OAAAvS,EAAAwS,YACblX,KAAAoe,wBAAA,GACApe,KAAAqe,sBAAA,GACAre,KAAAse,MAAA,EACA,IAAAC,EAAAta,KAAAua,MAAAxe,KAAA8E,WAAAc,EAAA,GACA6Y,EAAAxa,KAAAua,MAAAxe,KAAA8E,WAAAsN,EAAA,GAEApS,KAAA0e,mBAAA,IAAAha,EAAAkT,kBAAA2G,EAAAE,EAAAN,GACAne,KAAA0e,mBAAA7G,QAAAvV,KAAA,yBACAtC,KAAA0e,mBAAA7G,QAAA8G,iBAAA,EAEA,QAAAzd,EAAA,EAAiBA,EAAAlB,KAAAse,MAAgBpd,IAAA,CAEjC,IAAA0d,EAAA,IAAAla,EAAAkT,kBAAA2G,EAAAE,EAAAN,GAEAS,EAAA/G,QAAAvV,KAAA,oBAAApB,EACA0d,EAAA/G,QAAA8G,iBAAA,EAEA3e,KAAAoe,wBAAAtc,KAAA8c,GAEA,IAAAC,EAAA,IAAAna,EAAAkT,kBAAA2G,EAAAE,EAAAN,GAEAU,EAAAhH,QAAAvV,KAAA,oBAAApB,EACA2d,EAAAhH,QAAA8G,iBAAA,EAEA3e,KAAAqe,sBAAAvc,KAAA+c,GAEAN,EAAAta,KAAAua,MAAAD,EAAA,GAEAE,EAAAxa,KAAAua,MAAAC,EAAA,QAMAnd,IAAAoD,EAAA0R,0BACA7E,QAAA4G,MAAA,kEAEA,IAAA2G,EAAApa,EAAA0R,yBACApW,KAAA+e,iBAAAra,EAAAsa,cAAAnU,MAAAiU,EAAAla,UAEA5E,KAAA+e,iBAAA,uBAAA9e,MAAAge,EACAje,KAAA+e,iBAAA,eAAA9e,MAAA,IAEAD,KAAAif,uBAAA,IAAAva,EAAAwa,eAAA,CACAta,SAAA5E,KAAA+e,iBACA/Z,aAAA8Z,EAAA9Z,aACAE,eAAA4Z,EAAA5Z,eACAE,QAAA,KAIApF,KAAAmf,uBAAA,GACA,IAAAC,EAAA,aAIA,IAHAb,EAAAta,KAAAua,MAAAxe,KAAA8E,WAAAc,EAAA,GACA6Y,EAAAxa,KAAAua,MAAAxe,KAAA8E,WAAAsN,EAAA,GAEAlR,EAAA,EAAiBA,EAAAlB,KAAAse,MAAgBpd,IAEjClB,KAAAmf,uBAAArd,KAAA9B,KAAAqf,yBAAAD,EAAAle,KAEAlB,KAAAmf,uBAAAje,GAAA0D,SAAA,WAAA3E,MAAA,IAAAyE,EAAAK,QAAAwZ,EAAAE,GAEAF,EAAAta,KAAAua,MAAAD,EAAA,GAEAE,EAAAxa,KAAAua,MAAAC,EAAA,GAKAze,KAAAsf,kBAAAtf,KAAAuf,qBAAAvf,KAAAse,OACAte,KAAAsf,kBAAA1a,SAAA,gBAAA3E,MAAAD,KAAAqe,sBAAA,GAAAxG,QACA7X,KAAAsf,kBAAA1a,SAAA,gBAAA3E,MAAAD,KAAAqe,sBAAA,GAAAxG,QACA7X,KAAAsf,kBAAA1a,SAAA,gBAAA3E,MAAAD,KAAAqe,sBAAA,GAAAxG,QACA7X,KAAAsf,kBAAA1a,SAAA,gBAAA3E,MAAAD,KAAAqe,sBAAA,GAAAxG,QACA7X,KAAAsf,kBAAA1a,SAAA,gBAAA3E,MAAAD,KAAAqe,sBAAA,GAAAxG,QACA7X,KAAAsf,kBAAA1a,SAAA,iBAAA3E,MAAA+d,EACAhe,KAAAsf,kBAAA1a,SAAA,eAAA3E,MAAA,GACAD,KAAAsf,kBAAA5M,aAAA,EAEA,IAAA8M,EAAA,gBACAxf,KAAAsf,kBAAA1a,SAAA,gBAAA3E,MAAAuf,EACAxf,KAAAyf,gBAAA,KAAA/a,EAAAmE,QAAA,WAAAnE,EAAAmE,QAAA,WAAAnE,EAAAmE,QAAA,OACA,IAAAnE,EAAAmE,QAAA,WAAAnE,EAAAmE,QAAA,QACA7I,KAAAsf,kBAAA1a,SAAA,mBAAA3E,MAAAD,KAAAyf,qBAGAne,IAAAoD,EAAAwT,YAEA3G,QAAA4G,MAAA,oDAIA,IAAAuH,EAAAhb,EAAAwT,WAEAlY,KAAA2f,aAAAjb,EAAAsa,cAAAnU,MAAA6U,EAAA9a,UACA5E,KAAA2f,aAAA,WAAA1f,MAAA,EAEAD,KAAA4f,aAAA,IAAAlb,EAAAwa,eAAA,CACAta,SAAA5E,KAAA2f,aACA3a,aAAA0a,EAAA1a,aACAE,eAAAwa,EAAAxa,eACA2a,SAAAnb,EAAAob,iBACAC,WAAA,EACAC,YAAA,EACAC,aAAA,IAGAjgB,KAAA2I,SAAA,EACA3I,KAAA0G,WAAA,EAEA1G,KAAAkgB,cAAA,IAAAxb,EAAA+R,MACAzW,KAAAmgB,cAAA,EAEAngB,KAAAogB,MAAA,IAAA1b,EAAA2b,kBAEArgB,KAAAsgB,OAAA,IAAA5b,EAAA8B,KAAAuT,eAAA,OAIArV,EAAAqZ,gBAAAnX,UAAAnH,OAAAoH,OAAApH,OAAA4D,OAAAqB,EAAA8B,KAAAI,WAAA,CAEAE,YAAApC,EAAAqZ,gBAEAjQ,QAAA,WAEA,QAAA5M,EAAA,EAAkBA,EAAAlB,KAAAoe,wBAAAhd,OAAyCF,IAE3DlB,KAAAoe,wBAAAld,GAAA4M,UAIA,IAAA5M,EAAA,EAAkBA,EAAAlB,KAAAqe,sBAAAjd,OAAuCF,IAEzDlB,KAAAqe,sBAAAnd,GAAA4M,UAIA9N,KAAA0e,mBAAA5Q,WAIA+K,QAAA,SAAApB,EAAAE,GAEA,IAAA4G,EAAAta,KAAAua,MAAA/G,EAAA,GACAgH,EAAAxa,KAAAua,MAAA7G,EAAA,GAEA3X,KAAA0e,mBAAA7F,QAAA0F,EAAAE,GAEA,QAAAvd,EAAA,EAAkBA,EAAAlB,KAAAse,MAAgBpd,IAElClB,KAAAoe,wBAAAld,GAAA2X,QAAA0F,EAAAE,GACAze,KAAAqe,sBAAAnd,GAAA2X,QAAA0F,EAAAE,GAEAze,KAAAmf,uBAAAje,GAAA0D,SAAA,WAAA3E,MAAA,IAAAyE,EAAAK,QAAAwZ,EAAAE,GAEAF,EAAAta,KAAAua,MAAAD,EAAA,GACAE,EAAAxa,KAAAua,MAAAC,EAAA,IAMA1X,OAAA,SAAAC,EAAAC,EAAAC,EAAAiS,EAAAI,GAEAvZ,KAAAkgB,cAAAzU,KAAAzE,EAAAuZ,iBACAvgB,KAAAmgB,cAAAnZ,EAAAwZ,gBACA,IAAAC,EAAAzZ,EAAA0Z,UACA1Z,EAAA0Z,WAAA,EAEA1Z,EAAA2Z,cAAA3gB,KAAAke,WAAA,GAEA3E,GAAAvS,EAAAK,QAAAuZ,QAAA5Z,EAAAK,QAAAwZ,cAIA7gB,KAAAgY,iBAEAhY,KAAAsgB,OAAAnG,SAAAna,KAAAogB,MACApgB,KAAAogB,MAAAU,IAAA5Z,EAAA2Q,QAEA7Q,EAAAmB,gBAAA,MACAnB,EAAAP,QACAzG,KAAAsgB,OAAAvZ,OAAAC,IAMAhH,KAAA+e,iBAAA,YAAA9e,MAAAiH,EAAA2Q,QACA7X,KAAA+e,iBAAA,uBAAA9e,MAAAD,KAAAie,UACAje,KAAAsgB,OAAAnG,SAAAna,KAAAif,uBAEAjY,EAAAmB,gBAAAnI,KAAA0e,oBACA1X,EAAAP,QACAzG,KAAAsgB,OAAAvZ,OAAAC,GAMA,IAFA,IAAA+Z,EAAA/gB,KAAA0e,mBAEAxd,EAAA,EAAkBA,EAAAlB,KAAAse,MAAgBpd,IAElClB,KAAAsgB,OAAAnG,SAAAna,KAAAmf,uBAAAje,GAEAlB,KAAAmf,uBAAAje,GAAA0D,SAAA,gBAAA3E,MAAA8gB,EAAAlJ,QACA7X,KAAAmf,uBAAAje,GAAA0D,SAAA,aAAA3E,MAAAyE,EAAAqZ,gBAAAiD,eACAha,EAAAmB,gBAAAnI,KAAAoe,wBAAAld,IACA8F,EAAAP,QACAzG,KAAAsgB,OAAAvZ,OAAAC,GAEAhH,KAAAmf,uBAAAje,GAAA0D,SAAA,gBAAA3E,MAAAD,KAAAoe,wBAAAld,GAAA2W,QACA7X,KAAAmf,uBAAAje,GAAA0D,SAAA,aAAA3E,MAAAyE,EAAAqZ,gBAAAkD,eACAja,EAAAmB,gBAAAnI,KAAAqe,sBAAAnd,IACA8F,EAAAP,QACAzG,KAAAsgB,OAAAvZ,OAAAC,GAEA+Z,EAAA/gB,KAAAqe,sBAAAnd,GAMAlB,KAAAsgB,OAAAnG,SAAAna,KAAAsf,kBACAtf,KAAAsf,kBAAA1a,SAAA,iBAAA3E,MAAAD,KAAAge,SACAhe,KAAAsf,kBAAA1a,SAAA,eAAA3E,MAAAD,KAAAkN,OACAlN,KAAAsf,kBAAA1a,SAAA,mBAAA3E,MAAAD,KAAAyf,gBAEAzY,EAAAmB,gBAAAnI,KAAAoe,wBAAA,IACApX,EAAAP,QACAzG,KAAAsgB,OAAAvZ,OAAAC,GAIAhH,KAAAsgB,OAAAnG,SAAAna,KAAA4f,aACA5f,KAAA2f,aAAA,YAAA1f,MAAAD,KAAAoe,wBAAA,GAAAvG,QAEA0B,GAAAvS,EAAAK,QAAA6Z,OAAAla,EAAAK,QAAAwZ,cAGA7gB,KAAAgY,gBAEAhR,EAAAmB,gBAAA,MACAnI,KAAAsgB,OAAAvZ,OAAAC,KAIAA,EAAAmB,gBAAAjB,GACAlH,KAAAsgB,OAAAvZ,OAAAC,IAMAA,EAAA2Z,cAAA3gB,KAAAkgB,cAAAlgB,KAAAmgB,eACAnZ,EAAA0Z,UAAAD,GAIApB,yBAAA,SAAA8B,GAEA,WAAAzc,EAAAwa,eAAA,CAEA9Z,QAAA,CACAgc,cAAAD,EACAE,MAAAF,GAGAvc,SAAA,CACA0c,aAAA,CAAqBrhB,MAAA,MACrBshB,QAAA,CAAgBthB,MAAA,IAAAyE,EAAAK,QAAA,QAChByc,UAAA,CAAkBvhB,MAAA,IAAAyE,EAAAK,QAAA,SAGlBC,aACA,gKAMAE,eACA,8+BA6BAqa,qBAAA,SAAAjB,GAEA,WAAA5Z,EAAAwa,eAAA,CAEA9Z,QAAA,CACAqc,SAAAnD,GAGA1Z,SAAA,CACA8c,aAAA,CAAqBzhB,MAAA,MACrB0hB,aAAA,CAAqB1hB,MAAA,MACrB2hB,aAAA,CAAqB3hB,MAAA,MACrB4hB,aAAA,CAAqB5hB,MAAA,MACrB6hB,aAAA,CAAqB7hB,MAAA,MACrB8hB,YAAA,CAAoB9hB,MAAA,MACpB+hB,cAAA,CAAsB/hB,MAAA,GACtBuf,aAAA,CAAqBvf,MAAA,MACrBwf,gBAAA,CAAwBxf,MAAA,MACxBgiB,YAAA,CAAoBhiB,MAAA,IAGpB+E,aACA,gKAMAE,eACA,uvCA8BAR,EAAAqZ,gBAAAiD,eAAA,IAAAtc,EAAAK,QAAA,KACAL,EAAAqZ,gBAAAkD,eAAA,IAAAvc,EAAAK,QAAA,2BC1YAN,EAAAlG,EAAY7B,EAAQ,mICCL,SAAAwlB,EAAAC,EAAA/hB,EAAAH,GAYf,OAXAG,KAAA+hB,EACIC,IAAsBD,EAAA/hB,EAAA,CAC1BH,QACAa,YAAA,EACAsB,cAAA,EACAigB,UAAA,IAGAF,EAAA/hB,GAAAH,EAGAkiB,ECTe,SAAAG,EAAA1Z,GACf,QAAA1H,EAAA,EAAiBA,EAAAgB,UAAAd,OAAsBF,IAAA,CACvC,IAAAqhB,EAAA,MAAArgB,UAAAhB,GAAAgB,UAAAhB,GAAA,GAEAshB,EAAkBC,IAAYF,GAEc,oBAA7BG,EAAAxiB,IACfsiB,IAAA9H,OAA+BgI,IAA6BH,GAAAI,OAAA,SAAAliB,GAC5D,OAAemiB,IAAgCL,EAAA9hB,GAAAK,eAI/C0hB,EAAAK,QAAA,SAAAziB,GACM8hB,EAActZ,EAAAxI,EAAAmiB,EAAAniB,MAIpB,OAAAwI,EArBAlM,EAAAomB,EAAAC,EAAA,sBAAAT,0BCCA,IAAA5d,EAAYhI,EAAQ,QAMpBgI,EAAAse,WAAA,SAAA1c,EAAAC,EAAA0c,EAAA/E,EAAAgF,GAEAxe,EAAA8B,KAAA/E,KAAAzB,MAEAA,KAAAsG,QACAtG,KAAAuG,SAEAvG,KAAAijB,mBAEAjjB,KAAAke,aACAle,KAAAkjB,gBAAA5hB,IAAA4hB,IAAA,EAEAljB,KAAAyG,OAAA,EACAzG,KAAAmjB,YAAA,EACAnjB,KAAA0G,WAAA,GAIAhC,EAAAse,WAAApc,UAAAnH,OAAAoH,OAAApH,OAAA4D,OAAAqB,EAAA8B,KAAAI,WAAA,CAEAE,YAAApC,EAAAse,WAEAjc,OAAA,SAAAC,EAAAC,EAAAC,GAEA,IAKAgZ,EAAAC,EALAM,EAAAzZ,EAAA0Z,UACA1Z,EAAA0Z,WAAA,EAEA1gB,KAAAsG,MAAA2c,iBAAAjjB,KAAAijB,iBAIAjjB,KAAAke,aAEAgC,EAAAlZ,EAAAuZ,gBAAA6C,SACAjD,EAAAnZ,EAAAwZ,gBAEAxZ,EAAA2Z,cAAA3gB,KAAAke,WAAAle,KAAAkjB,aAIAljB,KAAAmjB,YAEAnc,EAAAmc,aAIAnc,EAAAmB,gBAAAnI,KAAAgY,eAAA,KAAA9Q,GAGAlH,KAAAyG,OAAAO,EAAAP,MAAAO,EAAAqc,eAAArc,EAAAsc,eAAAtc,EAAAuc,kBACAvc,EAAAD,OAAA/G,KAAAsG,MAAAtG,KAAAuG,QAEAvG,KAAAke,YAEAlX,EAAA2Z,cAAAT,EAAAC,GAIAngB,KAAAsG,MAAA2c,iBAAA,KACAjc,EAAA0Z,UAAAD,2BClEAjc,EAAAC,QAAiB/H,EAAQ,8BCCzB,IAAAgI,EAAYhI,EAAQ,QAMpBgI,EAAA0T,WAAA,SAAAoL,EAAAC,GAEA/e,EAAA8B,KAAA/E,KAAAzB,MAEAA,KAAAyjB,eAAAniB,IAAAmiB,IAAA,WAEAD,aAAA9e,EAAAwa,gBAEAlf,KAAA4E,SAAA4e,EAAA5e,SAEA5E,KAAAma,SAAAqJ,GAEEA,IAEFxjB,KAAA4E,SAAAF,EAAAsa,cAAAnU,MAAA2Y,EAAA5e,UAEA5E,KAAAma,SAAA,IAAAzV,EAAAwa,eAAA,CAEA9Z,QAAA3F,OAAAoH,OAAA,GAA6B2c,EAAApe,SAC7BR,SAAA5E,KAAA4E,SACAI,aAAAwe,EAAAxe,aACAE,eAAAse,EAAAte,kBAMAlF,KAAAsgB,OAAA,IAAA5b,EAAA8B,KAAAuT,eAAA/Z,KAAAma,WAIAzV,EAAA0T,WAAAxR,UAAAnH,OAAAoH,OAAApH,OAAA4D,OAAAqB,EAAA8B,KAAAI,WAAA,CAEAE,YAAApC,EAAA0T,WAEArR,OAAA,SAAAC,EAAAC,EAAAC,GAEAlH,KAAA4E,SAAA5E,KAAAyjB,aAEAzjB,KAAA4E,SAAA5E,KAAAyjB,WAAAxjB,MAAAiH,EAAA2Q,SAIA7X,KAAAsgB,OAAAnG,SAAAna,KAAAma,SAEAna,KAAAgY,gBAEAhR,EAAAmB,gBAAA,MACAnI,KAAAsgB,OAAAvZ,OAAAC,KAIAA,EAAAmB,gBAAAlB,GAEAjH,KAAAyG,OAAAO,EAAAP,MAAAO,EAAAqc,eAAArc,EAAAsc,eAAAtc,EAAAuc,kBACAvjB,KAAAsgB,OAAAvZ,OAAAC,6BC9DAtK,EAAQ,QACR8H,EAAAC,QAAiB/H,EAAQ,QAAqB+C,OAAAiE,4CCD9ChH,EAAQ,QACR,IAAA6X,EAAc7X,EAAQ,QAAqB+C,OAC3C+E,EAAAC,QAAA,SAAAtE,EAAAC,GACA,OAAAmU,EAAA/Q,yBAAArD,EAAAC","file":"LoadBall.umd.min.vendors~engine.js","sourcesContent":["'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author davidedc / http://www.sketchpatch.net/\n *\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nTHREE.FXAAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"resolution\": { value: new THREE.Vector2( 1 / 1024, 1 / 512 ) }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n        \"precision highp float;\",\n        \"\",\n        \"uniform sampler2D tDiffuse;\",\n        \"\",\n        \"uniform vec2 resolution;\",\n        \"\",\n        \"varying vec2 vUv;\",\n        \"\",\n        \"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\n        \"\",\n        \"//----------------------------------------------------------------------------------\",\n        \"// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag\",\n        \"// SDK Version: v3.00\",\n        \"// Email:       gameworks@nvidia.com\",\n        \"// Site:        http://developer.nvidia.com/\",\n        \"//\",\n        \"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\n        \"//\",\n        \"// Redistribution and use in source and binary forms, with or without\",\n        \"// modification, are permitted provided that the following conditions\",\n        \"// are met:\",\n        \"//  * Redistributions of source code must retain the above copyright\",\n        \"//    notice, this list of conditions and the following disclaimer.\",\n        \"//  * Redistributions in binary form must reproduce the above copyright\",\n        \"//    notice, this list of conditions and the following disclaimer in the\",\n        \"//    documentation and/or other materials provided with the distribution.\",\n        \"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\n        \"//    contributors may be used to endorse or promote products derived\",\n        \"//    from this software without specific prior written permission.\",\n        \"//\",\n        \"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\n        \"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\n        \"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\n        \"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\n        \"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\n        \"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\n        \"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\n        \"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\n        \"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\n        \"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\n        \"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\n        \"//\",\n        \"//----------------------------------------------------------------------------------\",\n        \"\",\n        \"#define FXAA_PC 1\",\n        \"#define FXAA_GLSL_100 1\",\n        \"#define FXAA_QUALITY_PRESET 12\",\n        \"\",\n        \"#define FXAA_GREEN_AS_LUMA 1\",\n        \"\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_PC_CONSOLE\",\n        \"    //\",\n        \"    // The console algorithm for PC is included\",\n        \"    // for developers targeting really low spec machines.\",\n        \"    // Likely better to just run FXAA_PC, and use a really low preset.\",\n        \"    //\",\n        \"    #define FXAA_PC_CONSOLE 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_GLSL_120\",\n        \"    #define FXAA_GLSL_120 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_GLSL_130\",\n        \"    #define FXAA_GLSL_130 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_HLSL_3\",\n        \"    #define FXAA_HLSL_3 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_HLSL_4\",\n        \"    #define FXAA_HLSL_4 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_HLSL_5\",\n        \"    #define FXAA_HLSL_5 0\",\n        \"#endif\",\n        \"/*==========================================================================*/\",\n        \"#ifndef FXAA_GREEN_AS_LUMA\",\n        \"    //\",\n        \"    // For those using non-linear color,\",\n        \"    // and either not able to get luma in alpha, or not wanting to,\",\n        \"    // this enables FXAA to run using green as a proxy for luma.\",\n        \"    // So with this enabled, no need to pack luma in alpha.\",\n        \"    //\",\n        \"    // This will turn off AA on anything which lacks some amount of green.\",\n        \"    // Pure red and blue or combination of only R and B, will get no AA.\",\n        \"    //\",\n        \"    // Might want to lower the settings for both,\",\n        \"    //    fxaaConsoleEdgeThresholdMin\",\n        \"    //    fxaaQualityEdgeThresholdMin\",\n        \"    // In order to insure AA does not get turned off on colors\",\n        \"    // which contain a minor amount of green.\",\n        \"    //\",\n        \"    // 1 = On.\",\n        \"    // 0 = Off.\",\n        \"    //\",\n        \"    #define FXAA_GREEN_AS_LUMA 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_EARLY_EXIT\",\n        \"    //\",\n        \"    // Controls algorithm's early exit path.\",\n        \"    // On PS3 turning this ON adds 2 cycles to the shader.\",\n        \"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\n        \"    // Turning this off on console will result in a more blurry image.\",\n        \"    // So this defaults to on.\",\n        \"    //\",\n        \"    // 1 = On.\",\n        \"    // 0 = Off.\",\n        \"    //\",\n        \"    #define FXAA_EARLY_EXIT 1\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_DISCARD\",\n        \"    //\",\n        \"    // Only valid for PC OpenGL currently.\",\n        \"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\n        \"    //\",\n        \"    // 1 = Use discard on pixels which don't need AA.\",\n        \"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\n        \"    // 0 = Return unchanged color on pixels which don't need AA.\",\n        \"    //\",\n        \"    #define FXAA_DISCARD 0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_FAST_PIXEL_OFFSET\",\n        \"    //\",\n        \"    // Used for GLSL 120 only.\",\n        \"    //\",\n        \"    // 1 = GL API supports fast pixel offsets\",\n        \"    // 0 = do not use fast pixel offsets\",\n        \"    //\",\n        \"    #ifdef GL_EXT_gpu_shader4\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n        \"    #endif\",\n        \"    #ifdef GL_NV_gpu_shader5\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n        \"    #endif\",\n        \"    #ifdef GL_ARB_gpu_shader5\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\n        \"    #endif\",\n        \"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\n        \"        #define FXAA_FAST_PIXEL_OFFSET 0\",\n        \"    #endif\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#ifndef FXAA_GATHER4_ALPHA\",\n        \"    //\",\n        \"    // 1 = API supports gather4 on alpha channel.\",\n        \"    // 0 = API does not support gather4 on alpha channel.\",\n        \"    //\",\n        \"    #if (FXAA_HLSL_5 == 1)\",\n        \"        #define FXAA_GATHER4_ALPHA 1\",\n        \"    #endif\",\n        \"    #ifdef GL_ARB_gpu_shader5\",\n        \"        #define FXAA_GATHER4_ALPHA 1\",\n        \"    #endif\",\n        \"    #ifdef GL_NV_gpu_shader5\",\n        \"        #define FXAA_GATHER4_ALPHA 1\",\n        \"    #endif\",\n        \"    #ifndef FXAA_GATHER4_ALPHA\",\n        \"        #define FXAA_GATHER4_ALPHA 0\",\n        \"    #endif\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"                        FXAA QUALITY - TUNING KNOBS\",\n        \"------------------------------------------------------------------------------\",\n        \"NOTE the other tuning knobs are now in the shader function inputs!\",\n        \"============================================================================*/\",\n        \"#ifndef FXAA_QUALITY_PRESET\",\n        \"    //\",\n        \"    // Choose the quality preset.\",\n        \"    // This needs to be compiled into the shader as it effects code.\",\n        \"    // Best option to include multiple presets is to\",\n        \"    // in each shader define the preset, then include this file.\",\n        \"    //\",\n        \"    // OPTIONS\",\n        \"    // -----------------------------------------------------------------------\",\n        \"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\n        \"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\n        \"    // 39       - no dither, very expensive\",\n        \"    //\",\n        \"    // NOTES\",\n        \"    // -----------------------------------------------------------------------\",\n        \"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\n        \"    // 13 = about same speed as FXAA 3.9 and better than 12\",\n        \"    // 23 = closest to FXAA 3.9 visually and performance wise\",\n        \"    //  _ = the lowest digit is directly related to performance\",\n        \"    // _  = the highest digit is directly related to style\",\n        \"    //\",\n        \"    #define FXAA_QUALITY_PRESET 12\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"\",\n        \"                           FXAA QUALITY - PRESETS\",\n        \"\",\n        \"============================================================================*/\",\n        \"\",\n        \"/*============================================================================\",\n        \"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\n        \"============================================================================*/\",\n        \"#if (FXAA_QUALITY_PRESET == 10)\",\n        \"    #define FXAA_QUALITY_PS 3\",\n        \"    #define FXAA_QUALITY_P0 1.5\",\n        \"    #define FXAA_QUALITY_P1 3.0\",\n        \"    #define FXAA_QUALITY_P2 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 11)\",\n        \"    #define FXAA_QUALITY_PS 4\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 3.0\",\n        \"    #define FXAA_QUALITY_P3 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 12)\",\n        \"    #define FXAA_QUALITY_PS 5\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 4.0\",\n        \"    #define FXAA_QUALITY_P4 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 13)\",\n        \"    #define FXAA_QUALITY_PS 6\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 4.0\",\n        \"    #define FXAA_QUALITY_P5 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 14)\",\n        \"    #define FXAA_QUALITY_PS 7\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 4.0\",\n        \"    #define FXAA_QUALITY_P6 12.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 15)\",\n        \"    #define FXAA_QUALITY_PS 8\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 4.0\",\n        \"    #define FXAA_QUALITY_P7 12.0\",\n        \"#endif\",\n        \"\",\n        \"/*============================================================================\",\n        \"                     FXAA QUALITY - LOW DITHER PRESETS\",\n        \"============================================================================*/\",\n        \"#if (FXAA_QUALITY_PRESET == 20)\",\n        \"    #define FXAA_QUALITY_PS 3\",\n        \"    #define FXAA_QUALITY_P0 1.5\",\n        \"    #define FXAA_QUALITY_P1 2.0\",\n        \"    #define FXAA_QUALITY_P2 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 21)\",\n        \"    #define FXAA_QUALITY_PS 4\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 22)\",\n        \"    #define FXAA_QUALITY_PS 5\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 23)\",\n        \"    #define FXAA_QUALITY_PS 6\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 24)\",\n        \"    #define FXAA_QUALITY_PS 7\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 3.0\",\n        \"    #define FXAA_QUALITY_P6 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 25)\",\n        \"    #define FXAA_QUALITY_PS 8\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 4.0\",\n        \"    #define FXAA_QUALITY_P7 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 26)\",\n        \"    #define FXAA_QUALITY_PS 9\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 4.0\",\n        \"    #define FXAA_QUALITY_P8 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 27)\",\n        \"    #define FXAA_QUALITY_PS 10\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 4.0\",\n        \"    #define FXAA_QUALITY_P9 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 28)\",\n        \"    #define FXAA_QUALITY_PS 11\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 2.0\",\n        \"    #define FXAA_QUALITY_P9 4.0\",\n        \"    #define FXAA_QUALITY_P10 8.0\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_QUALITY_PRESET == 29)\",\n        \"    #define FXAA_QUALITY_PS 12\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.5\",\n        \"    #define FXAA_QUALITY_P2 2.0\",\n        \"    #define FXAA_QUALITY_P3 2.0\",\n        \"    #define FXAA_QUALITY_P4 2.0\",\n        \"    #define FXAA_QUALITY_P5 2.0\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 2.0\",\n        \"    #define FXAA_QUALITY_P9 2.0\",\n        \"    #define FXAA_QUALITY_P10 4.0\",\n        \"    #define FXAA_QUALITY_P11 8.0\",\n        \"#endif\",\n        \"\",\n        \"/*============================================================================\",\n        \"                     FXAA QUALITY - EXTREME QUALITY\",\n        \"============================================================================*/\",\n        \"#if (FXAA_QUALITY_PRESET == 39)\",\n        \"    #define FXAA_QUALITY_PS 12\",\n        \"    #define FXAA_QUALITY_P0 1.0\",\n        \"    #define FXAA_QUALITY_P1 1.0\",\n        \"    #define FXAA_QUALITY_P2 1.0\",\n        \"    #define FXAA_QUALITY_P3 1.0\",\n        \"    #define FXAA_QUALITY_P4 1.0\",\n        \"    #define FXAA_QUALITY_P5 1.5\",\n        \"    #define FXAA_QUALITY_P6 2.0\",\n        \"    #define FXAA_QUALITY_P7 2.0\",\n        \"    #define FXAA_QUALITY_P8 2.0\",\n        \"    #define FXAA_QUALITY_P9 2.0\",\n        \"    #define FXAA_QUALITY_P10 4.0\",\n        \"    #define FXAA_QUALITY_P11 8.0\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"\",\n        \"                                API PORTING\",\n        \"\",\n        \"============================================================================*/\",\n        \"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\n        \"    #define FxaaBool bool\",\n        \"    #define FxaaDiscard discard\",\n        \"    #define FxaaFloat float\",\n        \"    #define FxaaFloat2 vec2\",\n        \"    #define FxaaFloat3 vec3\",\n        \"    #define FxaaFloat4 vec4\",\n        \"    #define FxaaHalf float\",\n        \"    #define FxaaHalf2 vec2\",\n        \"    #define FxaaHalf3 vec3\",\n        \"    #define FxaaHalf4 vec4\",\n        \"    #define FxaaInt2 ivec2\",\n        \"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\n        \"    #define FxaaTex sampler2D\",\n        \"#else\",\n        \"    #define FxaaBool bool\",\n        \"    #define FxaaDiscard clip(-1)\",\n        \"    #define FxaaFloat float\",\n        \"    #define FxaaFloat2 float2\",\n        \"    #define FxaaFloat3 float3\",\n        \"    #define FxaaFloat4 float4\",\n        \"    #define FxaaHalf half\",\n        \"    #define FxaaHalf2 half2\",\n        \"    #define FxaaHalf3 half3\",\n        \"    #define FxaaHalf4 half4\",\n        \"    #define FxaaSat(x) saturate(x)\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_GLSL_100 == 1)\",\n        \"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\n        \"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_GLSL_120 == 1)\",\n        \"    // Requires,\",\n        \"    //  #version 120\",\n        \"    // And at least,\",\n        \"    //  #extension GL_EXT_gpu_shader4 : enable\",\n        \"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\n        \"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\n        \"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\n        \"    #else\",\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\n        \"    #endif\",\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\n        \"    #endif\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_GLSL_130 == 1)\",\n        \"    // Requires \\\"#version 130\\\" or better\",\n        \"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\n        \"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\n        \"    #endif\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_HLSL_3 == 1)\",\n        \"    #define FxaaInt2 float2\",\n        \"    #define FxaaTex sampler2D\",\n        \"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\n        \"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_HLSL_4 == 1)\",\n        \"    #define FxaaInt2 int2\",\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\n        \"#endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"#if (FXAA_HLSL_5 == 1)\",\n        \"    #define FxaaInt2 int2\",\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\n        \"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\n        \"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\n        \"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\n        \"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\n        \"============================================================================*/\",\n        \"#if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\n        \"#else\",\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\n        \"#endif\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"/*============================================================================\",\n        \"\",\n        \"                             FXAA3 QUALITY - PC\",\n        \"\",\n        \"============================================================================*/\",\n        \"#if (FXAA_PC == 1)\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"FxaaFloat4 FxaaPixelShader(\",\n        \"    //\",\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\n        \"    // {xy} = center of pixel\",\n        \"    FxaaFloat2 pos,\",\n        \"    //\",\n        \"    // Used only for FXAA Console, and not used on the 360 version.\",\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\n        \"    // {xy_} = upper left of pixel\",\n        \"    // {_zw} = lower right of pixel\",\n        \"    FxaaFloat4 fxaaConsolePosPos,\",\n        \"    //\",\n        \"    // Input color texture.\",\n        \"    // {rgb_} = color in linear or perceptual color space\",\n        \"    // if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"    //     {__a} = luma in perceptual color space (not linear)\",\n        \"    FxaaTex tex,\",\n        \"    //\",\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\n        \"    // For 360, same texture, just alias with a 2nd sampler.\",\n        \"    // This sampler needs to have an exponent bias of -1.\",\n        \"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\n        \"    //\",\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\n        \"    // For 360, same texture, just alias with a 3nd sampler.\",\n        \"    // This sampler needs to have an exponent bias of -2.\",\n        \"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // {x_} = 1.0/screenWidthInPixels\",\n        \"    // {_y} = 1.0/screenHeightInPixels\",\n        \"    FxaaFloat2 fxaaQualityRcpFrame,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // This effects sub-pixel AA quality and inversely sharpness.\",\n        \"    //   Where N ranges between,\",\n        \"    //     N = 0.50 (default)\",\n        \"    //     N = 0.33 (sharper)\",\n        \"    // {x__} = -N/screenWidthInPixels\",\n        \"    // {_y_} = -N/screenHeightInPixels\",\n        \"    // {_z_} =  N/screenWidthInPixels\",\n        \"    // {__w} =  N/screenHeightInPixels\",\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // Not used on 360, but used on PS3 and PC.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // {x__} = -2.0/screenWidthInPixels\",\n        \"    // {_y_} = -2.0/screenHeightInPixels\",\n        \"    // {_z_} =  2.0/screenWidthInPixels\",\n        \"    // {__w} =  2.0/screenHeightInPixels\",\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\n        \"    // This must be from a constant/uniform.\",\n        \"    // {x__} =  8.0/screenWidthInPixels\",\n        \"    // {_y_} =  8.0/screenHeightInPixels\",\n        \"    // {_z_} = -4.0/screenWidthInPixels\",\n        \"    // {__w} = -4.0/screenHeightInPixels\",\n        \"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // Choose the amount of sub-pixel aliasing removal.\",\n        \"    // This can effect sharpness.\",\n        \"    //   1.00 - upper limit (softer)\",\n        \"    //   0.75 - default amount of filtering\",\n        \"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\n        \"    //   0.25 - almost off\",\n        \"    //   0.00 - completely off\",\n        \"    FxaaFloat fxaaQualitySubpix,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // The minimum amount of local contrast required to apply algorithm.\",\n        \"    //   0.333 - too little (faster)\",\n        \"    //   0.250 - low quality\",\n        \"    //   0.166 - default\",\n        \"    //   0.125 - high quality\",\n        \"    //   0.063 - overkill (slower)\",\n        \"    FxaaFloat fxaaQualityEdgeThreshold,\",\n        \"    //\",\n        \"    // Only used on FXAA Quality.\",\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // Trims the algorithm from processing darks.\",\n        \"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\n        \"    //   0.0625 - high quality (faster)\",\n        \"    //   0.0312 - visible limit (slower)\",\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\n        \"    //   Likely want to set this to zero.\",\n        \"    //   As colors that are mostly not-green\",\n        \"    //   will appear very dark in the green channel!\",\n        \"    //   Tune by looking at mostly non-green content,\",\n        \"    //   then start at zero and increase until aliasing is a problem.\",\n        \"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\n        \"    //   Due to the PS3 being ALU bound,\",\n        \"    //   there are only three safe values here: 2 and 4 and 8.\",\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\n        \"    // For all other platforms can be a non-power of two.\",\n        \"    //   8.0 is sharper (default!!!)\",\n        \"    //   4.0 is softer\",\n        \"    //   2.0 is really soft (good only for vector graphics inputs)\",\n        \"    FxaaFloat fxaaConsoleEdgeSharpness,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\n        \"    //   Due to the PS3 being ALU bound,\",\n        \"    //   there are only two safe values here: 1/4 and 1/8.\",\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\n        \"    // The console setting has a different mapping than the quality setting.\",\n        \"    // Other platforms can use other values.\",\n        \"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\n        \"    //   0.25 leaves more aliasing, and is sharper\",\n        \"    FxaaFloat fxaaConsoleEdgeThreshold,\",\n        \"    //\",\n        \"    // Only used on FXAA Console.\",\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\n        \"    // It is here now to allow easier tuning.\",\n        \"    // Trims the algorithm from processing darks.\",\n        \"    // The console setting has a different mapping than the quality setting.\",\n        \"    // This only applies when FXAA_EARLY_EXIT is 1.\",\n        \"    // This does not apply to PS3,\",\n        \"    // PS3 was simplified to avoid more shader instructions.\",\n        \"    //   0.06 - faster but more aliasing in darks\",\n        \"    //   0.05 - default\",\n        \"    //   0.04 - slower and less aliasing in darks\",\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\n        \"    //   Likely want to set this to zero.\",\n        \"    //   As colors that are mostly not-green\",\n        \"    //   will appear very dark in the green channel!\",\n        \"    //   Tune by looking at mostly non-green content,\",\n        \"    //   then start at zero and increase until aliasing is a problem.\",\n        \"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\n        \"    //\",\n        \"    // Extra constants for 360 FXAA Console only.\",\n        \"    // Use zeros or anything else for other platforms.\",\n        \"    // These must be in physical constant registers and NOT immediates.\",\n        \"    // Immediates will result in compiler un-optimizing.\",\n        \"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\n        \"    FxaaFloat4 fxaaConsole360ConstDir\",\n        \") {\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat2 posM;\",\n        \"    posM.x = pos.x;\",\n        \"    posM.y = pos.y;\",\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\n        \"        #if (FXAA_DISCARD == 0)\",\n        \"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\n        \"            #if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"                #define lumaM rgbyM.w\",\n        \"            #else\",\n        \"                #define lumaM rgbyM.y\",\n        \"            #endif\",\n        \"        #endif\",\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\n        \"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\n        \"        #else\",\n        \"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\n        \"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\n        \"        #endif\",\n        \"        #if (FXAA_DISCARD == 1)\",\n        \"            #define lumaM luma4A.w\",\n        \"        #endif\",\n        \"        #define lumaE luma4A.z\",\n        \"        #define lumaS luma4A.x\",\n        \"        #define lumaSE luma4A.y\",\n        \"        #define lumaNW luma4B.w\",\n        \"        #define lumaN luma4B.z\",\n        \"        #define lumaW luma4B.x\",\n        \"    #else\",\n        \"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\n        \"            #define lumaM rgbyM.w\",\n        \"        #else\",\n        \"            #define lumaM rgbyM.y\",\n        \"        #endif\",\n        \"        #if (FXAA_GLSL_100 == 1)\",\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\n        \"        #else\",\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\n        \"        #endif\",\n        \"    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat maxSM = max(lumaS, lumaM);\",\n        \"    FxaaFloat minSM = min(lumaS, lumaM);\",\n        \"    FxaaFloat maxESM = max(lumaE, maxSM);\",\n        \"    FxaaFloat minESM = min(lumaE, minSM);\",\n        \"    FxaaFloat maxWN = max(lumaN, lumaW);\",\n        \"    FxaaFloat minWN = min(lumaN, lumaW);\",\n        \"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\n        \"    FxaaFloat rangeMin = min(minWN, minESM);\",\n        \"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\n        \"    FxaaFloat range = rangeMax - rangeMin;\",\n        \"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\n        \"    FxaaBool earlyExit = range < rangeMaxClamped;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(earlyExit)\",\n        \"        #if (FXAA_DISCARD == 1)\",\n        \"            FxaaDiscard;\",\n        \"        #else\",\n        \"            return rgbyM;\",\n        \"        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    #if (FXAA_GATHER4_ALPHA == 0)\",\n        \"        #if (FXAA_GLSL_100 == 1)\",\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\n        \"        #else\",\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\n        \"        #endif\",\n        \"    #else\",\n        \"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\n        \"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\n        \"    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat lumaNS = lumaN + lumaS;\",\n        \"    FxaaFloat lumaWE = lumaW + lumaE;\",\n        \"    FxaaFloat subpixRcpRange = 1.0/range;\",\n        \"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\n        \"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\n        \"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\n        \"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\n        \"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\n        \"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\n        \"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\n        \"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\n        \"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\n        \"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\n        \"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\n        \"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\n        \"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\n        \"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\n        \"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\n        \"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(!horzSpan) lumaN = lumaW;\",\n        \"    if(!horzSpan) lumaS = lumaE;\",\n        \"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\n        \"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat gradientN = lumaN - lumaM;\",\n        \"    FxaaFloat gradientS = lumaS - lumaM;\",\n        \"    FxaaFloat lumaNN = lumaN + lumaM;\",\n        \"    FxaaFloat lumaSS = lumaS + lumaM;\",\n        \"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\n        \"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\n        \"    if(pairN) lengthSign = -lengthSign;\",\n        \"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat2 posB;\",\n        \"    posB.x = posM.x;\",\n        \"    posB.y = posM.y;\",\n        \"    FxaaFloat2 offNP;\",\n        \"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\n        \"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\n        \"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\n        \"    if( horzSpan) posB.y += lengthSign * 0.5;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat2 posN;\",\n        \"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\n        \"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\n        \"    FxaaFloat2 posP;\",\n        \"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\n        \"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\n        \"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\n        \"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\n        \"    FxaaFloat subpixE = subpixC * subpixC;\",\n        \"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(!pairN) lumaNN = lumaSS;\",\n        \"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\n        \"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\n        \"    FxaaFloat subpixF = subpixD * subpixE;\",\n        \"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    lumaEndN -= lumaNN * 0.5;\",\n        \"    lumaEndP -= lumaNN * 0.5;\",\n        \"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\n        \"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\n        \"    FxaaBool doneNP = (!doneN) || (!doneP);\",\n        \"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\n        \"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    if(doneNP) {\",\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\n        \"        doneNP = (!doneN) || (!doneP);\",\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        #if (FXAA_QUALITY_PS > 3)\",\n        \"        if(doneNP) {\",\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\n        \"            doneNP = (!doneN) || (!doneP);\",\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            #if (FXAA_QUALITY_PS > 4)\",\n        \"            if(doneNP) {\",\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\n        \"                doneNP = (!doneN) || (!doneP);\",\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                #if (FXAA_QUALITY_PS > 5)\",\n        \"                if(doneNP) {\",\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\n        \"                    doneNP = (!doneN) || (!doneP);\",\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    #if (FXAA_QUALITY_PS > 6)\",\n        \"                    if(doneNP) {\",\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\n        \"                        doneNP = (!doneN) || (!doneP);\",\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                        #if (FXAA_QUALITY_PS > 7)\",\n        \"                        if(doneNP) {\",\n        \"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                            doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                            doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\n        \"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\n        \"                            doneNP = (!doneN) || (!doneP);\",\n        \"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\n        \"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    #if (FXAA_QUALITY_PS > 8)\",\n        \"    if(doneNP) {\",\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\n        \"        doneNP = (!doneN) || (!doneP);\",\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        #if (FXAA_QUALITY_PS > 9)\",\n        \"        if(doneNP) {\",\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\n        \"            doneNP = (!doneN) || (!doneP);\",\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            #if (FXAA_QUALITY_PS > 10)\",\n        \"            if(doneNP) {\",\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\n        \"                doneNP = (!doneN) || (!doneP);\",\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                #if (FXAA_QUALITY_PS > 11)\",\n        \"                if(doneNP) {\",\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\n        \"                    doneNP = (!doneN) || (!doneP);\",\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    #if (FXAA_QUALITY_PS > 12)\",\n        \"                    if(doneNP) {\",\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\n        \"                        doneNP = (!doneN) || (!doneP);\",\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    }\",\n        \"                    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                }\",\n        \"                #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            }\",\n        \"            #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        }\",\n        \"        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    }\",\n        \"    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                        }\",\n        \"                        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                    }\",\n        \"                    #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"                }\",\n        \"                #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"            }\",\n        \"            #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"        }\",\n        \"        #endif\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    }\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat dstN = posM.x - posN.x;\",\n        \"    FxaaFloat dstP = posP.x - posM.x;\",\n        \"    if(!horzSpan) dstN = posM.y - posN.y;\",\n        \"    if(!horzSpan) dstP = posP.y - posM.y;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\n        \"    FxaaFloat spanLength = (dstP + dstN);\",\n        \"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\n        \"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaBool directionN = dstN < dstP;\",\n        \"    FxaaFloat dst = min(dstN, dstP);\",\n        \"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\n        \"    FxaaFloat subpixG = subpixF * subpixF;\",\n        \"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\n        \"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\n        \"/*--------------------------------------------------------------------------*/\",\n        \"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\n        \"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\n        \"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\n        \"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\n        \"    #if (FXAA_DISCARD == 1)\",\n        \"        return FxaaTexTop(tex, posM);\",\n        \"    #else\",\n        \"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\n        \"    #endif\",\n        \"}\",\n        \"/*==========================================================================*/\",\n        \"#endif\",\n        \"\",\n        \"void main() {\",\n        \"  gl_FragColor = FxaaPixelShader(\",\n        \"    vUv,\",\n        \"    vec4(0.0),\",\n        \"    tDiffuse,\",\n        \"    tDiffuse,\",\n        \"    tDiffuse,\",\n        \"    resolution,\",\n        \"    vec4(0.0),\",\n        \"    vec4(0.0),\",\n        \"    vec4(0.0),\",\n        \"    0.75,\",\n        \"    0.166,\",\n        \"    0.0833,\",\n        \"    0.0,\",\n        \"    0.0,\",\n        \"    0.0,\",\n        \"    vec4(0.0)\",\n        \"  );\",\n        \"\",\n        \"  // TODO avoid querying texture twice for same texel\",\n        \"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\n        \"}\"\n\t].join(\"\\n\")\n\n};\n\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\"\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"uImageIncrement\": { value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\": { value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join( \"\\n\" ),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++ i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++ i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n} );\n\n\nTHREE.ClearMaskPass = function () {\n\n\tTHREE.Pass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nTHREE.ClearMaskPass.prototype = Object.create( THREE.Pass.prototype );\n\nObject.assign( THREE.ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\n","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","exports.f = {}.propertyIsEnumerable;\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author moroine / https://github.com/moroine\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nTHREE.MapControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: 0,\n\t\tROTATE_UP: 1,\n\t\tROTATE_LEFT: 2,\n\t\tROTATE: 3, // ROTATE_UP | ROTATE_LEFT\n\t\tDOLLY: 4,\n\t\tDOLLY_ROTATE: 7, // ROTATE | DOLLY\n\t\tPAN: 8,\n\t\tDOLLY_PAN: 12, // DOLLY | PAN\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateStart2 = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateEnd2 = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\tvar rotateDelta2 = new THREE.Vector2();\n\tvar rotateDeltaStartFingers = new THREE.Vector2();\n\tvar rotateDeltaEndFingers = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: MapControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t//console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t// console.log( 'handleTouchStartRotate' );\n\n\t\t// First finger\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t// Second finger\n\t\trotateStart2.set( event.touches[ 1 ].pageX, event.touches[ 1 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\t// console.log( 'handleTouchStartDolly' );\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\t// console.log( 'handleTouchStartPan' );\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( scope.enableRotate === false ) return;\n\t\tif ( ( state & STATE.ROTATE ) === 0 ) return;\n\n\t\t// First finger\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t// Second finger\n\t\trotateEnd2.set( event.touches[ 1 ].pageX, event.touches[ 1 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\trotateDelta2.subVectors( rotateEnd2, rotateStart2 );\n\t\trotateDeltaStartFingers.subVectors( rotateStart2, rotateStart );\n\t\trotateDeltaEndFingers.subVectors( rotateEnd2, rotateEnd );\n\n\t\tif ( isRotateUp() ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\t// Start rotateUp ==> disable all movement to prevent flickering\n\t\t\tstate = STATE.ROTATE_UP;\n\n\t\t} else if ( ( state & STATE.ROTATE_LEFT ) !== 0 ) {\n\n\t\t\trotateLeft( ( rotateDeltaStartFingers.angle() - rotateDeltaEndFingers.angle() ) * scope.rotateSpeed );\n\n\t\t}\n\n\t\trotateStart.copy( rotateEnd );\n\t\trotateStart2.copy( rotateEnd2 );\n\n\t}\n\n\tfunction isRotateUp() {\n\n\t\t// At start, does the two fingers are aligned horizontally\n\t\tif ( ! isHorizontal( rotateDeltaStartFingers ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// At end, does the two fingers are aligned horizontally\n\t\tif ( ! isHorizontal( rotateDeltaEndFingers ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// does the first finger moved vertically between start and end\n\t\tif ( ! isVertical( rotateDelta ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// does the second finger moved vertically between start and end\n\t\tif ( ! isVertical( rotateDelta2 ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// Does the two finger moved in the same direction (prevent moving one finger vertically up while the other goes down)\n\t\treturn rotateDelta.dot( rotateDelta2 ) > 0;\n\n\t}\n\n\tvar isHorizontal = function () {\n\n\t\tvar precision = Math.sin( Math.PI / 6 );\n\n\t\treturn function isHorizontal( vector ) {\n\n\t\t\treturn Math.abs( Math.sin( vector.angle() ) ) < precision;\n\n\t\t};\n\n\t}();\n\n\tvar isVertical = function () {\n\n\t\tvar precision = Math.cos( Math.PI / 2 - Math.PI / 6 );\n\n\t\treturn function isVertical( vector ) {\n\n\t\t\treturn Math.abs( Math.cos( vector.angle() ) ) < precision;\n\n\t\t};\n\n\t}();\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tif ( scope.enableZoom === false ) return;\n\t\tif ( ( state & STATE.DOLLY ) === 0 ) return;\n\n\t\t// console.log( 'handleTouchMoveDolly' );\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyIn( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( scope.enablePan === false ) return;\n\t\tif ( ( state & STATE.PAN ) === 0 ) return;\n\n\t\t// console.log( 'handleTouchMovePan' );\n\n\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: rotate-dolly\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\t\t\t\thandleTouchStartDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: pan\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: rotate-dolly\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\t\t\t\tif ( ( state & STATE.DOLLY_ROTATE ) === 0 ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\t\t\t\thandleTouchMoveDolly( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.MapControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.MapControls.prototype.constructor = THREE.MapControls;\n\nObject.defineProperties( THREE.MapControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.MapControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author bhouston / http://clara.io/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nTHREE.LuminosityHighPassShader = {\n\n\tshaderID: \"luminosityHighPass\",\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"luminosityThreshold\": { value: 1.0 },\n\t\t\"smoothWidth\": { value: 1.0 },\n\t\t\"defaultColor\": { value: new THREE.Color( 0x000000 ) },\n\t\t\"defaultOpacity\": { value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec3 defaultColor;\",\n\t\t\"uniform float defaultOpacity;\",\n\t\t\"uniform float luminosityThreshold;\",\n\t\t\"uniform float smoothWidth;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n\n\t\t\t\"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n\n\t\t\t\"gl_FragColor = mix( outputColor, texel, alpha );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getSize( new THREE.Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\n\n\t}\n\n\tif ( THREE.ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n\tthis.clock = new THREE.Clock();\n\n};\n\nObject.assign( THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getDrawingBufferSize( new THREE.Vector2() );\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new THREE.Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( THREE.Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nTHREE.Pass.FullScreenQuad = ( function () {\n\n\tvar camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new THREE.PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new THREE.Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","module.exports = require(\"core-js/library/fn/object/define-property\");","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","exports.f = Object.getOwnPropertySymbols;\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\n","module.exports = require(\"core-js/library/fn/object/keys\");","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author spidersharma / http://eduperiment.com/\n *\n * Inspired from Unreal Engine\n * https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\n\nTHREE.UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\tthis.radius = radius;\n\tthis.threshold = threshold;\n\tthis.resolution = ( resolution !== undefined ) ? new THREE.Vector2( resolution.x, resolution.y ) : new THREE.Vector2( 256, 256 );\n\n\t// create color only once here, reuse it later inside the render function\n\tthis.clearColor = new THREE.Color( 0, 0, 0 );\n\n\t// render targets\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\n\tthis.renderTargetsHorizontal = [];\n\tthis.renderTargetsVertical = [];\n\tthis.nMips = 5;\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tthis.renderTargetBright = new THREE.WebGLRenderTarget( resx, resy, pars );\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tvar renderTargetHorizonal = new THREE.WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\tvar renderTargetVertical = new THREE.WebGLRenderTarget( resx, resy, pars );\n\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// luminosity high pass material\n\n\tif ( THREE.LuminosityHighPassShader === undefined )\n\t\tconsole.error( \"THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader\" );\n\n\tvar highPassShader = THREE.LuminosityHighPassShader;\n\tthis.highPassUniforms = THREE.UniformsUtils.clone( highPassShader.uniforms );\n\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\n\n\tthis.materialHighPassFilter = new THREE.ShaderMaterial( {\n\t\tuniforms: this.highPassUniforms,\n\t\tvertexShader: highPassShader.vertexShader,\n\t\tfragmentShader: highPassShader.fragmentShader,\n\t\tdefines: {}\n\t} );\n\n\t// Gaussian Blur Materials\n\tthis.separableBlurMaterials = [];\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\tvar resx = Math.round( this.resolution.x / 2 );\n\tvar resy = Math.round( this.resolution.y / 2 );\n\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\n\n\t\tresx = Math.round( resx / 2 );\n\n\t\tresy = Math.round( resy / 2 );\n\n\t}\n\n\t// Composite material\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\n\tthis.compositeMaterial.needsUpdate = true;\n\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\n\tthis.bloomTintColors = [ new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ),\n\t\t\t\t\t\t\t new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ) ];\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t// copy material\n\tif ( THREE.CopyShader === undefined ) {\n\n\t\tconsole.error( \"THREE.UnrealBloomPass relies on THREE.CopyShader\" );\n\n\t}\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.basic = new THREE.MeshBasicMaterial();\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( null );\n\n};\n\nTHREE.UnrealBloomPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.UnrealBloomPass,\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar resx = Math.round( width / 2 );\n\t\tvar resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t},\n\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render input to screen\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tvar inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.materialCopy;\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\n\n\t\treturn new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\n\t\t\t\t\"SIGMA\": kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"colorTexture\": { value: null },\n\t\t\t\t\"texSize\": { value: new THREE.Vector2( 0.5, 0.5 ) },\n\t\t\t\t\"direction\": { value: new THREE.Vector2( 0.5, 0.5 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"#include <common>\\\n\t\t\t\tvarying vec2 vUv;\\n\\\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\n\t\t\t\tuniform vec2 texSize;\\\n\t\t\t\tuniform vec2 direction;\\\n\t\t\t\t\\\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\n\t\t\t\t}\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\n\t\t\t\t\t\tfloat x = float(i);\\\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\n\t\t\t\t\t}\\\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\n\t\t\t\t}\"\n\t\t} );\n\n\t},\n\n\tgetCompositeMaterial: function ( nMips ) {\n\n\t\treturn new THREE.ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t\"NUM_MIPS\": nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t\"blurTexture1\": { value: null },\n\t\t\t\t\"blurTexture2\": { value: null },\n\t\t\t\t\"blurTexture3\": { value: null },\n\t\t\t\t\"blurTexture4\": { value: null },\n\t\t\t\t\"blurTexture5\": { value: null },\n\t\t\t\t\"dirtTexture\": { value: null },\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\n\t\t\t\t\"bloomFactors\": { value: null },\n\t\t\t\t\"bloomTintColors\": { value: null },\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t\"varying vec2 vUv;\\n\\\n\t\t\t\tvoid main() {\\n\\\n\t\t\t\t\tvUv = uv;\\n\\\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\n\t\t\t\t}\",\n\n\t\t\tfragmentShader:\n\t\t\t\t\"varying vec2 vUv;\\\n\t\t\t\tuniform sampler2D blurTexture1;\\\n\t\t\t\tuniform sampler2D blurTexture2;\\\n\t\t\t\tuniform sampler2D blurTexture3;\\\n\t\t\t\tuniform sampler2D blurTexture4;\\\n\t\t\t\tuniform sampler2D blurTexture5;\\\n\t\t\t\tuniform sampler2D dirtTexture;\\\n\t\t\t\tuniform float bloomStrength;\\\n\t\t\t\tuniform float bloomRadius;\\\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\n\t\t\t\t\\\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\n\t\t\t\t}\\\n\t\t\t\t\\\n\t\t\t\tvoid main() {\\\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\n\t\t\t\t}\"\n\t\t} );\n\n\t}\n\n} );\n\nTHREE.UnrealBloomPass.BlurDirectionX = new THREE.Vector2( 1.0, 0.0 );\nTHREE.UnrealBloomPass.BlurDirectionY = new THREE.Vector2( 0.0, 1.0 );\n\n","exports.f = require('./_wks');\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\n","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","/*** IMPORTS FROM imports-loader ***/\nvar THREE = require(\"three\");\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new THREE.Pass.FullScreenQuad( this.material );\n\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\n","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n"],"sourceRoot":""}