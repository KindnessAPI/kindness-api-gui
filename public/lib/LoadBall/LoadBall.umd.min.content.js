(("undefined"!==typeof self?self:this)["webpackJsonpLoadBall"]=("undefined"!==typeof self?self:this)["webpackJsonpLoadBall"]||[]).push([[2],{"7b24":function(e,n,r){"use strict";r.r(n);var t=r("aede"),a=r("5a89");r("63d9"),r("7f7f");function i(e,n,r){this.variables=[],this.currentTextureIndex=0;var t=new a["Scene"],i=new a["Camera"];i.position.z=1;var o={texture:{value:null}},s=f(c(),o),l=new a["Mesh"](new a["PlaneBufferGeometry"](2,2),s);function u(r){r.defines.resolution="vec2( "+e.toFixed(1)+", "+n.toFixed(1)+" )"}function f(e,n){n=n||{};var r=new a["ShaderMaterial"]({uniforms:n,vertexShader:d(),fragmentShader:e});return u(r),r}function d(){return"void main()\t{\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n"}function c(){return"uniform sampler2D texture;\n\nvoid main() {\n\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\n\n\tgl_FragColor = texture2D( texture, uv );\n\n}\n"}t.add(l),this.addVariable=function(e,n,r){var t=this.createShaderMaterial(n),i={name:e,initialValueTexture:r,material:t,dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:a["NearestFilter"],magFilter:a["NearestFilter"]};return this.variables.push(i),i},this.setVariableDependencies=function(e,n){e.dependencies=n},this.init=function(){if(!r.extensions.get("OES_texture_float"))return"No OES_texture_float support for float textures.";if(0===r.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(var t=0;t<this.variables.length;t++){var a=this.variables[t];a.renderTargets[0]=this.createRenderTarget(e,n,a.wrapS,a.wrapT,a.minFilter,a.magFilter),a.renderTargets[1]=this.createRenderTarget(e,n,a.wrapS,a.wrapT,a.minFilter,a.magFilter),this.renderTexture(a.initialValueTexture,a.renderTargets[0]),this.renderTexture(a.initialValueTexture,a.renderTargets[1]);var i=a.material,o=i.uniforms;if(null!==a.dependencies)for(var s=0;s<a.dependencies.length;s++){var l=a.dependencies[s];if(l.name!==a.name){for(var u=!1,f=0;f<this.variables.length;f++)if(l.name===this.variables[f].name){u=!0;break}if(!u)return"Variable dependency not found. Variable="+a.name+", dependency="+l.name}o[l.name]={value:null},i.fragmentShader="\nuniform sampler2D "+l.name+";\n"+i.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){for(var e=this.currentTextureIndex,n=0===this.currentTextureIndex?1:0,r=0,t=this.variables.length;r<t;r++){var a=this.variables[r];if(null!==a.dependencies)for(var i=a.material.uniforms,o=0,s=a.dependencies.length;o<s;o++){var l=a.dependencies[o];i[l.name].value=l.renderTargets[e].texture}this.doRenderTarget(a.material,a.renderTargets[n])}this.currentTextureIndex=n},this.getCurrentRenderTarget=function(e){return e.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(e){return e.renderTargets[0===this.currentTextureIndex?1:0]},this.addResolutionDefine=u,this.createShaderMaterial=f,this.createRenderTarget=function(r,t,i,o,s,l){r=r||e,t=t||n,i=i||a["ClampToEdgeWrapping"],o=o||a["ClampToEdgeWrapping"],s=s||a["NearestFilter"],l=l||a["NearestFilter"];var u=new a["WebGLRenderTarget"](r,t,{wrapS:i,wrapT:o,minFilter:s,magFilter:l,format:a["RGBAFormat"],type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?a["HalfFloatType"]:a["FloatType"],stencilBuffer:!1,depthBuffer:!1});return u},this.createTexture=function(){var r=new Float32Array(e*n*4),t=new a["DataTexture"](r,e,n,a["RGBAFormat"],a["FloatType"]);return t.needsUpdate=!0,t},this.renderTexture=function(e,n){o.texture.value=e,this.doRenderTarget(s,n),o.texture.value=null},this.doRenderTarget=function(e,n){var a=r.getRenderTarget();l.material=e,r.setRenderTarget(n),r.render(t,i),l.material=s,r.setRenderTarget(a)}}function o(){var e=Object(t["a"])(["\n      precision highp float;\n      precision highp sampler2D;\n\n      uniform sampler2D colorShader;\n      varying highp vec2 vUv;\n      varying highp vec3 vPos;\n      void main () {\n        vec4 colorVal = texture2D(colorShader, vUv);\n        gl_FragColor = vec4(vec3(\n          vPos.x / 100.0 * 0.6 + 0.5,\n          vPos.y / 100.0 * 0.6 + 0.5,\n          vPos.z / 100.0 * 0.6 + 0.5\n        ), 0.9);\n      }\n    "]);return o=function(){return e},e}function s(){var e=Object(t["a"])(["\n      precision highp float;\n      precision highp sampler2D;\n\n      varying highp vec2 vUv;\n      varying highp vec3 vPos;\n\n      uniform sampler2D geoShader;\n      void main () {\n        vUv = uv;\n        vec4 posTex = texture2D(geoShader, uv);\n        gl_PointSize = 1.0;\n        vPos = posTex.xyz;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(posTex.xyz, posTex.w);\n      }\n    "]);return s=function(){return e},e}function l(){var e=Object(t["a"])(["\n  /*\n    LIBRARY\n  */\n  #include <common>\n\n  /*\n    Simulation Main Code\n  */\n  uniform float time;\n  uniform sampler2D meta0;\n  void main (void) {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    vec4 LAST_COLOR = texture2D(textureColor, uv);\n    vec4 META0 = texture2D(meta0, uv);\n\n    float vertexIDX = META0.x;\n    float squareIDX = META0.y;\n    float totalSquares = META0.z;\n    float pointIDX = META0.w;\n\n    float red = uv.x + 0.5;\n    float green = uv.y + 0.5;\n    float blue = 0.5;\n\n    gl_FragColor = vec4(red, green, blue, 1.0);\n  }\n"]);return l=function(){return e},e}function u(){var e=Object(t["a"])(["\n  /*\n    LIBRARY\n  */\n  #include <common>\n\n  mat3 rotateX (float rad) {\n    float c = cos(rad);\n    float s = sin(rad);\n    return mat3(\n      1.0, 0.0, 0.0,\n      0.0, c, s,\n      0.0, -s, c\n    );\n  }\n\n  mat3 rotateY (float rad) {\n    float c = cos(rad);\n    float s = sin(rad);\n    return mat3(\n      c, 0.0, -s,\n      0.0, 1.0, 0.0,\n      s, 0.0, c\n    );\n  }\n\n  mat3 rotateZ (float rad) {\n    float c = cos(rad);\n    float s = sin(rad);\n    return mat3(\n      c, s, 0.0,\n      -s, c, 0.0,\n      0.0, 0.0, 1.0\n    );\n  }\n\n  mat3 rotateQ (vec3 axis, float rad) {\n    float hr = rad / 2.0;\n    float s = sin( hr );\n    vec4 q = vec4(axis * s, cos( hr ));\n    vec3 q2 = q.xyz + q.xyz;\n    vec3 qq2 = q.xyz * q2;\n    vec2 qx = q.xx * q2.yz;\n    float qy = q.y * q2.z;\n    vec3 qw = q.w * q2.xyz;\n\n    return mat3(\n      1.0 - (qq2.y + qq2.z),  qx.x - qw.z,            qx.y + qw.y,\n      qx.x + qw.z,            1.0 - (qq2.x + qq2.z),  qy - qw.x,\n      qx.y - qw.y,            qy + qw.x,              1.0 - (qq2.x + qq2.y)\n    );\n  }\n\n  /*\n    Position Main Code\n  */\n  precision highp sampler2D;\n  uniform sampler2D meta0;\n  uniform float time;\n\n  void main (void) {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    vec4 LAST_POS = texture2D(texturePosition, uv);\n    vec4 META0 = texture2D(meta0, uv);\n    vec4 pos = vec4(0.0);\n\n    float vertexIDX = META0.x;\n    float squareIDX = META0.y;\n    float totalSquares = META0.z;\n    float pointIDX = META0.w;\n\n    /*\n      Assemble\n    */\n    vec3 plane = vec3(0.6, 0.3, 0.0);\n    bool isInvalid = false;\n    if (vertexIDX == 0.0) {\n      pos.x = 1.0 * plane.x;\n      pos.y = 1.0 * plane.y;\n      pos.z = 1.0 * plane.z;\n    } else if (vertexIDX == 1.0) {\n      pos.x = -1.0 * plane.x;\n      pos.y = 1.0 * plane.y;\n      pos.z = 1.0 * plane.z;\n    } else if (vertexIDX == 2.0) {\n      pos.x = -1.0 * plane.x;\n      pos.y = -1.0 * plane.y;\n      pos.z = 1.0 * plane.z;\n    } else if (vertexIDX == 3.0) {\n      pos.x = 1.0 * plane.x;\n      pos.y = 1.0 * plane.y;\n      pos.z = 1.0 * plane.z;\n    } else if (vertexIDX == 4.0) {\n      pos.x = -1.0 * plane.x;\n      pos.y = -1.0 * plane.y;\n      pos.z = 1.0 * plane.z;\n    } else if (vertexIDX == 5.0) {\n      pos.x = 1.0 * plane.x;\n      pos.y = -1.0 * plane.y;\n      pos.z = 1.0 * plane.z;\n    } else {\n      isInvalid = true;\n    }\n\n    if (!isInvalid) {\n      float dimension = (pow(totalSquares, 0.5));\n\n      vec3 offset = vec3(\n        plane.x * 15.25 * (squareIDX / dimension),\n        plane.y * 1.0 * (mod(squareIDX, dimension)),\n        plane.z * 0.0\n      );\n\n      pos.xyz += offset.xyz;\n\n      float pX = pos.x;\n      float pY = pos.y;\n      float pZ = pos.y;\n\n      float piz = 0.001 * 2.0 * 3.14159265;\n\n      pos.xyz = rotateQ(normalize(vec3(1.0, pZ * piz, 1.0)), time + pX * piz) * rotateY(time + pY * piz) * pos.xyz;\n      pos.z += sin(time  + pX * piz * 0.333) * 50.0;\n\n      pos.xyz *= 0.075;\n\n      pos.w = 1.0;\n      gl_FragColor = pos;\n    } else {\n      pos.w = 0.0;\n      gl_FragColor = pos;\n    }\n  }\n"]);return u=function(){return e},e}r.d(n,"makeAPI",function(){return p});var f=function(e){return e[0]},d=f(u()),c=f(l()),p=function(e){var n=e.renderer,r=e.scene,t={render:function(){}},l=1024,u=new i(l,l,n),p=u.createTexture(),v=u.createTexture(),m=u.createTexture(),x=u.addVariable("texturePosition",d,p),h=u.addVariable("textureColor",c,v);u.setVariableDependencies(x,[x]),u.setVariableDependencies(h,[h]),x.material.uniforms.time={value:0},x.material.uniforms.meta0={value:m},h.material.uniforms.time={value:0},h.material.uniforms.meta0={value:m};var g=u.init();null!==g&&console.error(g);var T=new a["BufferGeometry"],y=function(){for(var e=0,n=Math.pow(l*l,1/3),r=n*n*n,t=m.image.data,a=0;a<n;a++)for(var i=0;i<n;i++)for(var o=0;o<n;o++){var s=e/4;t[e+0]=s%6,t[e+1]=Math.floor(s/6),t[e+2]=r/6,t[e+3]=s,e+=4}};y();var q=function(){for(var e=[],n=0,r=0;r<l;r++)for(var t=0;t<l;t++)e[n+0]=t/l,e[n+1]=r/l,n+=2;return e},w=function(){for(var e=[],n=0,r=0;r<l;r++)for(var t=0;t<l;t++)e[n+0]=0,e[n+1]=0,e[n+2]=0,n+=3;return e};T.addAttribute("position",new a["Float32BufferAttribute"](w(),3)),T.addAttribute("uv",new a["Float32BufferAttribute"](q(),2));var z={time:{value:0},geoShader:{value:null},colorShader:{value:null}},b=new a["ShaderMaterial"]({transparent:!0,uniforms:z,defines:{resolution:"vec2(".concat(l.toFixed(1),", ").concat(l.toFixed(1),")")},vertexShader:f(s()),fragmentShader:f(o()),side:a["DoubleSide"]}),D=new a["Mesh"](T,b);return r.add(D),r.background=new a["Color"]("#ffffff"),t.render=function(){b.uniforms.geoShader.value=u.getCurrentRenderTarget(x).texture,b.uniforms.colorShader.value=u.getCurrentRenderTarget(h).texture;var e=.001*window.performance.now();x.material.uniforms.time.value=e,h.material.uniforms.time.value=e,u.compute()},t.clean=function(){r.remove(D)},t}},"98dd":function(e,n,r){"use strict";r.r(n);var t=function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("div")},a=[],i=(r("96cf"),r("3b8d")),o=r("7b24"),s={props:{engine:{}},data:function(){return{api:{}}},mounted:function(){this.setup()},methods:{setup:function(){var e=Object(i["a"])(regeneratorRuntime.mark(function e(){var n=this;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:this.api=o.makeAPI({renderer:this.engine.renderer,scene:this.engine.scene}),this.engine.execStack.renderActiveLearningART=function(){n.api.render()};case 2:case"end":return e.stop()}},e,this)}));function n(){return e.apply(this,arguments)}return n}()},beforeDestroy:function(){this.api.clean(),this.engine.execStack.renderActiveLearningART=function(){}}},l=s,u=r("2877"),f=Object(u["a"])(l,t,a,!1,null,null,null);n["default"]=f.exports}}]);
//# sourceMappingURL=LoadBall.umd.min.content.js.map